{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)935f258b-605f-4f36-9450-a3611768f4cb","ParentGuid":"(Guid)3d853929-dfea-49d3-9ccd-f0b5d5e9e6d3","Name":"(string)M_0ReadActConfig","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)24568a24-c491-472c-a21f-ee5d33859fab","@Value":{"@Type":"24568a24","@Value":{"MemoryReserveForOnlineChange":"(int)0","ExcludeFromBuild":"(bool)False","External":"(bool)False","EnableSystemCall":"(bool)False","CompilerDefines":"(string)","LinkAlways":"(bool)False","Undefines":{"@Type":"[string]","@Value":[]}}}}]},"TypeGuid":"(Guid)f8a58466-d7f6-439f-bbb8-d4600e41d099","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"24568a24":"{24568a24-c491-472c-a21f-ee5d33859fab}","2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","bool":"System.Boolean","Guid":"System.Guid","int":"System.Int32","string":"System.String"}},"object":{"Graph":{"@Type":"f8a58466","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)\n\nCASE iState OF\n\t\n(* ################################################################################ *)\t\n\t// Idle\n(* ################################################################################ *)\t\n\t0:\n\t\tOUT_bDone := FALSE;\n\t\tOUT_bError := FALSE;\n\t\tbErrorTemp := FALSE;\n\t\tOUT_bActive := FALSE;\n\n(* ################################################################################ *)\t\n\t// Reset FB\n(* ################################################################################ *)\t\n\n\t10://Start\n\tfbCommand (Execute\t:= FALSE,\n\t\t\t\tAxis \t:= NoAxis);\n\tfbReadListParameter(Execute\t:= FALSE,\n\t\t\t\tAxis \t:= NoAxis); \n\tWriteC578(Execute\t:= FALSE,\n\t\t\t\tAxis\t:= NoAxis);\n\tfbWriteC506(Execute:=FALSE, \n\t\t\t\tAxis:= \tNoAxis);\t\t\t\t\n\n\t// delete old structure\t\n\tFOR i := 1 TO iMAX_AXES_NUMBER DO\n\t\t// copy emty structure to initialize everything with default value\n\t\trefastAxesActConfig[i]:=\tstDummyAxesActConfig;\t\t\n\tEND_FOR\t\n\tFOR i := 1 TO iMAX_INLINE_IO DO\n\t\tM_DelStructure(IN_pbToElement:=ADR(refastInlineIOActConfig[i]) , IN_uiNoOfByte:=SIZEOF(refastInlineIOActConfig[i]) );\n\t\tM_DelStructure(IN_pbToElement:=ADR(InlineIOCfg[i]) , IN_uiNoOfByte:=SIZEOF(InlineIOCfg[i]) );\t\t\n\tEND_FOR\t\n\tFOR i := 1 TO iMAX_SERCOS_IO DO\n\t\tM_DelStructure(IN_pbToElement:=ADR(refastSercosIOActConfig[i]) , IN_uiNoOfByte:=SIZEOF(refastSercosIOActConfig[i]) );\n\tEND_FOR\t\n(*FOR i := 1 TO MAX_PROFIBUS_MASTER DO\n\t\tFOR j := 1 TO MAX_PROFIBUS_SLAVE DO\n\t\t\tM_DelStructure(PtrToElement:=ADR(ProfibusIOActConfig[i,j]) , NoOfByte:=SIZEOF(ProfibusIOActConfig[i,j]) );\n\t\tEND_FOR\t\n\tEND_FOR\t\n*)\t\n\tM_DelStructure(ADR(asAxisString), SIZEOF(asAxisString));\n\tM_DelStructure(ADR(aiC484), SIZEOF(aiC484));\n\tM_DelStructure(ADR(aiC510), SIZEOF(aiC510));\n\tM_DelStructure(ADR(apiPointerToC510), SIZEOF(apiPointerToC510));\n\tM_DelStructure(ADR(refastAxesConfigError), SIZEOF(refastAxesConfigError));\n\tM_DelStructure(ADR(refastFoundDrivesError), SIZEOF(refastFoundDrivesError));\n\tM_DelStructure(ADR(sRingString), SIZEOF(sRingString));\n\tM_DelStructure(ADR(sRingString2), SIZEOF(sRingString2));\n\tM_DelStructure(ADR(apsElements), SIZEOF(apsElements));\n\tM_DelStructure(ADR(apsElements2), SIZEOF(apsElements2));\n\tM_DelStructure(ADR(refastSercosIOActConfigC578), SIZEOF(refastSercosIOActConfigC578));\n\t\n\tfbINLNModuleConfigList(\n\t\tExecute:= FALSE, \n\t\tSizeOfModuleConfig:=  SIZEOF(InlineIOCfg), \n\t\tModuleConfigAdr:= ADR(InlineIOCfg), \n\t\tDone=> , \n\t\tActive=> , \n\t\tError=> , \n\t\tErrorID=> , \n\t\tErrorIdent=> , \n\t\tNoOfModuleConfig=> udiNoOfModuleConfig  );\n\t\n\tudiNoOfModuleConfig := 0;\t\n\t\n\tiActNoOfDrives := 0;\n\n\tiState \t:= 15;\n\t\t\n(* ################################################################################ *)\t\n\t// Change sercos F8 Error reaction to F5\n(* ################################################################################ *)\t\n//12:\t\n//\tIF UpdateFirmware THEN\n//\t\tIF (NOT SercosErrorReaction.F2_Error AND NOT SercosErrorReaction.F5_Error AND NOT SercosErrorReaction.F8_Error)\n//\t\t\tOR SercosErrorReaction.F8_Error THEN\n//\t\t\tdwC506.0 := TRUE;\t\t// for FWA Update change Error Reaction to F5\n//\t\t\tdwC506.1 := FALSE;\n//\t\tELSIF SercosErrorReaction.F5_Error THEN\n//\t\t\tdwC506.0 := TRUE;\n//\t\t\tdwC506.1 := FALSE;\n//\t\tELSIF SercosErrorReaction.F2_Error THEN  \n//\t\t\tdwC506.0 := FALSE;\n//\t\t\tdwC506.1 := TRUE;\t\n//\t\tEND_IF\n//\t\t\n//\t\tdwC506.7 := SercosErrorReaction.NoRedundancyWarning;\n//\t\tdwC506.8 := SercosErrorReaction.AutoRingRecovery; \n//\t\t\n//\t\tfbWriteC506(\n//\t\t\tExecute:=TRUE , \n//\t\t\tDone=> , \n//\t\t\tActive=> , \n//\t\t\tError=> , \n//\t\t\tErrorID=> , \n//\t\t\tErrorIdent=> , \n//\t\t\tParameterNumber:= FP_C_0_0506, \n//\t\t\tValue:= \tdwC506, \n//\t\t\tAxis:= \tNoAxis);\n//\tEND_IF\n//\t\n//\tIF fbWriteC506.Done OR NOT UpdateFirmware THEN\n//\t\tfbWriteC506(Execute:=FALSE, \n//\t\t\t\tAxis:= \tNoAxis);\t\n//\t\tiState \t:= 15;\t\t\n//\tELSIF fbWriteC506.Error then\n//\t\tErrorID \t:= fbWriteC506.ErrorID;\n//\t\tErrorIdent \t:= fbWriteC506.ErrorIdent;\n//\t\tfbWriteC506(Execute:=FALSE, \n//\t\t\t\t\tAxis:= \tNoAxis);\t\n//\t\tiState \t\t:= 998;\n//\tEND_IF\t\n\t\n(* ################################################################################ *)\t\n\t// Read actual configuration C-0-0578\n(* ################################################################################ *)\t\t\t\n\t15:\n\t\tfbReadListParameter(\n\t\t\tExecute\t\t\t:= TRUE, \n\t\t\tParameterNumber\t:= GVL_C_Param_ID.FP_C_0_0578, \n\t\t\tNoOfBytes\t\t:= SIZEOF(sRingString), \n\t\t\tValueAdr\t\t:= ADR(sRingString), \n\t\t\tAxis\t\t\t:= NoAxis);\n\t\t\t\n\t\t\tIF fbReadListParameter.Done THEN\n\t\t\t\tfbReadListParameter(Execute\t:= FALSE,\n\t\t\t\t\t\t\t\t\tAxis\t:= NoAxis);\n\t\t\t\tiState \t:= 20;\n\t\t\t\t\n\t\t\t\t// split String\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Workaround Defdb00192639, -1 if string is empty\t\t\t\t\t\n\t\t\t\tudiNoOfElements := IL_StrSplit(ADR(sRingString),',',0,FALSE,ADR(apsElements),TO_UDINT(SIZEOF(apsElements) - TO_INT(NOT TO_BOOL(LEN(sRingString)))) );\n\t\t\t\t//\t\t\t\t\tIL_StrSplit(ADR(sRingString),',',0,FALSE,ADR(arElements),TO_UDINT(SIZEOF(arElements) - TO_INT(NOT TO_BOOL(LEN(sRingString)))) ); \n\t\t\t\t{warning 'JS: strSplit'}\n\t\t\t\t//strSplit(ADR(sRingString),CHAR_COMMA,0,FALSE,ADR(arElements));\n\t\t\tELSIF fbReadListParameter.Error THEN\n\t\t\t\tOUT_ErrorID \t:= fbReadListParameter.ErrorID;\n\t\t\t\tOUT_ErrorIdent \t:= fbReadListParameter.ErrorIdent;\n\t\t\t\tfbReadListParameter(Execute\t:= FALSE,\n\t\t\t\t\t\t\t\t\tAxis\t:= NoAxis);\n\t\t\t\tiState \t\t:= 998;\n\t\t\tEND_IF\n\t\t\t\t\n(* ################################################################################ *)\t\n\t// copy IO configuration C-0-0578 into structure\n(* ################################################################################ *)\t\t\t\n\t20:\t\n \t\ti := 0;\n\t\tj := 1;\n\t\tk := 1;\n\t\t\n\t\t//copy string into structure\n\t\tFOR i := 0 TO (TO_INT(udiNoOfElements/iMAX_NUM_ELEMENTS_C578)-1) DO \n\t\t//REPEAT\n\t\t\t//Delete 'A' at beginning of String\n\t\t\tIF (apsElements[iMAX_NUM_ELEMENTS_C578*i+1]^ <> '') THEN\n\t\t\t\tpsString := apsElements[iMAX_NUM_ELEMENTS_C578*i+1]+1;\n\t\t\tELSE\n\t\t\t\tpsString := apsElements[iMAX_NUM_ELEMENTS_C578*i+1];\n\t\t\tEND_IF\n\t\t\t\n\t\t\tiSercosAddressTemp :=  STRING_TO_INT(psString^);\n\t\t\tpsRingString2 := apsElements[iMAX_NUM_ELEMENTS_C578*i+2];\n\t//\t\tsRingString2 := ptrRingString2^; \n\t//\t\tstrSplit(ADR(sRingString2),CHAR_MINUS,0,FALSE,ADR(arElements2));\n\t\t\t\t\n\t\t\t// sercos IO\n\t\t\tIF \tM_TypeCodeIsRexrothIO(sTypeCode:=LEFT (apsElements[iMAX_NUM_ELEMENTS_C578*i+3]^,13) ) THEN\n\t\t\t\trefastSercosIOActConfigC578[j].bAvailable := TRUE;\n\t\t\t\trefastSercosIOActConfigC578[j].iSercosAddress := iSercosAddressTemp;\n\t\t\t\n\t\t\t\trefastSercosIOActConfigC578[j].sTypeCode \t:= RIGHT (apsElements[iMAX_NUM_ELEMENTS_C578*i+3]^,10);\n\t\t\t\tj := j + 1;\n\t\t\tEND_IF\n\t\n\t//\tUNTIL(arElements[MAX_NUM_ELEMENTS_C578*i+1]^ = '' OR i >= MAX_SERCOS_DEVICES )\n\t//\tEND_REPEAT\n\t\tEND_FOR\n\t\t\n\t\tM_DelStructure(ADR(sRingString), SIZEOF(sRingString));\n\t\tM_DelStructure(ADR(sRingString2), SIZEOF(sRingString2));\n\t\tM_DelStructure(ADR(apsElements), SIZEOF(apsElements));\n\t\tM_DelStructure(ADR(apsElements2), SIZEOF(apsElements2));\n\t\t\n\t\tiState \t\t:= 25;\n\t\n(* ################################################################################ *)\t\n\t// Refresh FP_C_0_0479\n(* ################################################################################ *)\t\n\t25:\n\tfbCommand(\tExecute\t\t\t:= TRUE, \n\t\t\t\tParameterNumber\t:= GVL_C_Param_ID.FP_C_0_1009, \n\t\t\t\tAxis\t\t\t:= NoAxis);\n\n\tIF fbCommand.Done THEN\n\t\tfbCommand(\tExecute\t:= FALSE,\n\t\t\t\t\tAxis\t:= NoAxis);\n\t\tiState\t:= 30;\n\tELSIF fbCommand.Error THEN\n\t\tOUT_ErrorID\t\t:= fbCommand.ErrorID;\n\t\tOUT_ErrorIdent\t:= fbCommand.ErrorIdent;\n\t\tfbCommand(\tExecute:= FALSE,\n\t\t\t\t\tAxis:= NoAxis);\n\t\tiState \t\t:= 998;\n\tEND_IF\t\n\t\n(* ################################################################################ *)\t\n\t//read connected sercos devices\n(* ################################################################################ *)\t\n\t30:\n\t\tfbReadListParameter(\n\t\t\tExecute\t\t\t:= TRUE, \n\t\t\tParameterNumber\t:= GVL_C_Param_ID.FP_C_0_0479, \n\t\t\tNoOfBytes\t\t:= SIZEOF (sRingString), \n\t\t\tValueAdr\t\t:= ADR(sRingString), \n\t\t\tAxis\t\t\t:= NoAxis);\n\t\t\t\n\t\t\tIF fbReadListParameter.Done THEN\n\t\t\t\tfbReadListParameter(Execute\t:= FALSE,\n\t\t\t\t\t\t\t\t\tAxis\t:= NoAxis);\n\t\t\t\tiState \t:= 35;\n\t\t\tELSIF fbReadListParameter.Error THEN\n\t\t\t\tOUT_ErrorID \t:= fbReadListParameter.ErrorID;\n\t\t\t\tOUT_ErrorIdent \t:= fbReadListParameter.ErrorIdent;\n\t\t\t\tfbReadListParameter(Execute\t:= FALSE,\n\t\t\t\t\t\t\t\t\tAxis\t:= NoAxis);\n\t\t\t\tiState \t\t:= 998;\n\t\t\tEND_IF\n\n\t\t\n(* ################################################################################ *)\t\n\t//read configured drives\n(* ################################################################################ *)\t\t\t\t\n\t35: \n\t\tfbReadListParameter(\n\t\t\tExecute\t\t\t:= TRUE, \n\t\t\tParameterNumber\t:= GVL_C_Param_ID.FP_C_0_0484, \n\t\t\tNoOfBytes\t\t:= SIZEOF(aiC484), \n\t\t\tValueAdr\t\t:= ADR(aiC484), \n\t\t\tAxis\t\t\t:= NoAxis);\n\t\t\t\n\t\t\tIF fbReadListParameter.Done THEN\n\t\t\t\tfbReadListParameter(Execute\t:= FALSE,\n\t\t\t\t\t\t\t\t\tAxis\t:= NoAxis);\n\t\t\t\tiState \t:= 38;\n\t\t\tELSIF fbReadListParameter.Error THEN\n\t\t\t\tOUT_ErrorID \t:= fbReadListParameter.ErrorID;\n\t\t\t\tOUT_ErrorIdent \t:= fbReadListParameter.ErrorIdent;\n\t\t\t\tfbReadListParameter(Execute\t:= FALSE,\n\t\t\t\t\t\t\t\t\tAxis\t:= NoAxis);\n\t\t\t\tiState \t\t:= 998;\n\t\t\tEND_IF\n\t\t\n(* ################################################################################ *)\t\n\t//read Sercos address configuration\n(* ################################################################################ *)\t\t\t\t\t\n\t38:\n\t\tfbReadListParameter(\n\t\t\tExecute\t\t\t:= TRUE, \n\t\t\tParameterNumber\t:= GVL_C_Param_ID.FP_C_0_0510, \n\t\t\tNoOfBytes\t\t:= SIZEOF(aiC510), \n\t\t\tValueAdr\t\t:= ADR(aiC510), \n\t\t\tAxis\t\t\t:= NoAxis,\n\t\t\tNoOfRecBytes\t=> uiLengthArC510 );\n\t\t\n\t\tIF fbReadListParameter.Done THEN\n\t\t\tfbReadListParameter(Execute\t:= FALSE,\n\t\t\t\t\t\t\t\tAxis\t:= NoAxis);\n\t\t\tiState \t:= 40;\n\t\tELSIF fbReadListParameter.Error THEN\n\t\t\tOUT_ErrorID \t:= fbReadListParameter.ErrorID;\n\t\t\tOUT_ErrorIdent \t:= fbReadListParameter.ErrorIdent;\n\t\t\tfbReadListParameter(Execute\t:= FALSE,\n\t\t\t\t\t\t\t\tAxis\t:= NoAxis);\n\t\t\tiState \t\t:= 998;\n\t\tEND_IF\n\n\t\t\t\n(* ################################################################################ *)\t\n\t//split and copy the string into a structure\n(* ################################################################################ *)\t\t\t\t\t\n\t40:\t\n \t\ti := 0;\n\t\tj := 1;\n\t\tk := 1;\n\t\t\n\t\t// split String\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Workaround Defdb00192639, -1 if string is empty\t\t\t\t\t\n\t\tudiNoOfElements := IL_StrSplit(ADR(sRingString),',',0,FALSE,ADR(apsElements),TO_UDINT(SIZEOF(apsElements) - TO_INT(NOT TO_BOOL(LEN(sRingString)))) );\n\t\t\t\t\n\t\t\n\t\t//split\n\t\t// IL_StrSplit(ADR(sRingString),',',0,FALSE,ADR(arElements),TO_UDINT(SIZEOF(arElements) - TO_INT(NOT TO_BOOL(LEN(sRingString)))) ); \n\t\t{warning 'JS: strSplit'}\n\t\t//strSplit(ADR(sRingString),CHAR_COMMA,0,FALSE,ADR(arElements));\n\t\t//copy string into structure\n\t\t//REPEAT\n\t\tFOR i := 0 TO (TO_INT(udiNoOfElements/iMAX_NUM_ELEMENTS_C479)-1) DO \n\t\t\t//Delete 'A' at beginnin of String\n\t\t\tIF (apsElements[iMAX_NUM_ELEMENTS_C479*i+1]^ <> '') THEN\n\t\t\t\tpsString := apsElements[iMAX_NUM_ELEMENTS_C479*i+1]+1;\n\t\t\tELSE\n\t\t\t\tpsString := apsElements[iMAX_NUM_ELEMENTS_C479*i+1];\n\t\t\tEND_IF\n\t\t\t\n\t\t\tiSercosAddressTemp :=  STRING_TO_INT(psString^);\n\t\t\tpsRingString2 := apsElements[iMAX_NUM_ELEMENTS_C479*i+2];\n\t\t\tsRingString2 := psRingString2^;\n\n\t\t\t// split String\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Workaround Defdb00192639, -1 if string is empty\t\n\t\t\tudiNoOfElements2 := IL_StrSplit(ADR(sRingString2),'-',0,FALSE,ADR(apsElements2),TO_UDINT(SIZEOF(apsElements2) - TO_INT(NOT TO_BOOL(LEN(sRingString2)))) );\n\t\t\t//IL_StrSplit(ADR(sRingString2),'-',0,FALSE,ADR(arElements2),TO_UDINT(SIZEOF(arElements2) - TO_INT(NOT TO_BOOL(LEN(sRingString2)))) ); \n\t\t\t{warning 'JS: strSplit'}\n\t\t\t//strSplit(ADR(sRingString2),CHAR_MINUS,0,FALSE,ADR(arElements2));\n\t\t\t\n\n\t\t\t// check length\n\t\t\tIF udiNoOfElements > 7 THEN \t\n\t\t\t\t// sercos IO\n\t\t\t\tIF \tM_TypeCodeIsRexrothIO(sTypeCode:=LEFT (apsElements[iMAX_NUM_ELEMENTS_C479*i+7]^,13) ) THEN\n\t\t\t\t\trefastSercosIOActConfig[j].bAvailable := TRUE;\n\t\t\t\t\trefastSercosIOActConfig[j].iSercosAddress := iSercosAddressTemp;\n\t\t\t\t\n\t\t\t\t\trefastSercosIOActConfig[j].sTypeCode \t\t:= RIGHT(apsElements[iMAX_NUM_ELEMENTS_C479*i+7]^,10);\n\t\t\t\t\t\n\t\t\t\t// Where are I/O addresses in C-0-0510\n\t\t\t\t\tapiPointerToC510[j] := ADR (aiC510[i+1]);\t\n\t\t\t\t\tj := j +1;\t\t\t\n\t\t\t\t\n\t\t\t\t// Axis\n\t\t\t\tELSIF LEFT (apsElements[iMAX_NUM_ELEMENTS_C479*i+2]^,4) = 'FFWA' THEN\n\t\t\t\t\trefastAxesActConfig[k].bRealAxis \t\t\t:= TRUE;\n\t\t\t\t\trefastAxesActConfig[k].bAvailable \t\t\t:= TRUE;\t\t\n\t\t\t\t\trefastAxesActConfig[k].iSercosAddress := iSercosAddressTemp;\t\n\t\t\t\t\t\n\t\t\t\t\t// copy Firmware to structure (6 characters)\n\t\t\t\t\tsTemp := '-';\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesActConfig[k].sFirmware), apsElements2[3], ADR(refastAxesActConfig[k].sFirmware), 8);\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesActConfig[k].sFirmware), ADR(sTemp), ADR(refastAxesActConfig[k].sFirmware), 8);\n\t\t\t\t\tsTemp := '';\n\t\n\t\t\t\t\tIL_strNCopy(\n\t\t\t\t\t\tSourceStr:= apsElements2[4], \n\t\t\t\t\t\tDstStr:= ADR(sTemp), \n\t\t\t\t\t\tCharNum:= 5, \n\t\t\t\t\t\tstrCharFill:= ' ' , \n\t\t\t\t\t\tMaxLen:= 5);\n\t\t\t\t\t{warning 'strNCopy'}\t\t\t\t\t\n\t\t\t\t\t//strNCopy(ADR(sTemp), 3, arElements2[4], 3);\n\t\t\n\t\t\t\t\t//strConcat(ADR(AxesActConfig[k].Firmware), 9, ADR(sTemp));\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesActConfig[k].sFirmware), ADR(sTemp), ADR(refastAxesActConfig[k].sFirmware), 9);\n\t\t\t\t\t\n\t\t\t\t\t//check functional package \n\t\t\t\t\trefastAxesActConfig[k].stFunctionalPackages.bMSP := FALSE;\n\t\t\t\t\trefastAxesActConfig[k].stFunctionalPackages.bSRV := FALSE;\n\t\t\t\t\trefastAxesActConfig[k].stFunctionalPackages.bSNC := FALSE;\n\t\t\t\t\trefastAxesActConfig[k].stFunctionalPackages.bML := FALSE;\n\t\t\t\t\trefastAxesActConfig[k].stFunctionalPackages.bMA := FALSE;\n\t\t\t\t\trefastAxesActConfig[k].stFunctionalPackages.bTF := FALSE;\n\t\t\t\t\t\n\t\t\t\t\tIF apsElements2[7]^ = 'MSP' THEN\n\t\t\t\t\t\trefastAxesActConfig[k].stFunctionalPackages.bMSP := TRUE;\n\t\t\t\t\tELSIF apsElements2[7]^ = 'SRV' THEN\n\t\t\t\t\t\trefastAxesActConfig[k].stFunctionalPackages.bSRV := TRUE;\n\t\t\t\t\tELSIF apsElements2[7]^ = 'SNC' THEN\n\t\t\t\t\t\trefastAxesActConfig[k].stFunctionalPackages.bSNC := TRUE;\n\t\t\t\t\tEND_IF\n\t\t\t\t\t\n\t\t\t\t\tIF apsElements2[8]^ = 'ML' THEN\n\t\t\t\t\t\trefastAxesActConfig[k].stFunctionalPackages.bML := TRUE;\n\t\t\t\t\tELSIF apsElements2[8]^ = 'MA' THEN\n\t\t\t\t\t\trefastAxesActConfig[k].stFunctionalPackages.bMA := TRUE;\n\t\t\t\t\tELSIF apsElements2[8]^ = 'TF' THEN\n\t\t\t\t\t\trefastAxesActConfig[k].stFunctionalPackages.bTF := TRUE;\n\t\t\t\t\tEND_IF\t\n\t\t\t\t\t\n\t\t\t\t\t// Check DoubleAxis\n\t\t\t\t\trefastAxesActConfig[k].stDoubleAxis.bIsDoubleAxis := FALSE;\t\n\t\t\t\t\tIF (apsElements2[3]^ = 'MPD') \n\t\t\t\t\t\tOR (apsElements2[3]^ = 'MPM') THEN\t\t(* 2021-08-03 gt: RDK90 #0124 Placon mit OHNE externe Bremse und neuen Steuerteilen *)\n\t\t\t\t\t\trefastAxesActConfig[k].stDoubleAxis.bIsDoubleAxis := TRUE;\n\t\t\t\t\t\trefastAxesActConfig[k].stDoubleAxis.iLeftAxisAddress := M_GetSercosAdress(apsElements[iMAX_NUM_ELEMENTS_C479*i+4], 1);\n\t\t\t\t\t\trefastAxesActConfig[k].stDoubleAxis.iRightAxisAddress := M_GetSercosAdress(apsElements[iMAX_NUM_ELEMENTS_C479*i+4], 2);\n\t\t\t\t\tEND_IF\n\t\t\t\t\t\n\t\t\t\t\tk := k+1;\n\t\t\t\n\t\t\t\t// no Rexroth IO device and no drive\t\n\t\t\t\tELSIF NOT (apsElements[iMAX_NUM_ELEMENTS_C479*i+1]^ = '') THEN\n\t\t\t\t\trefastSercosIOActConfig[j].bAvailable := TRUE;\n\t\t\t\t\trefastSercosIOActConfig[j].iSercosAddress := iSercosAddressTemp;\t\n\t\n\t\t\t\t\t//\tPräfix noch entfernen !!!\n\t\t\t\t\trefastSercosIOActConfig[j].sTypeCode \t\t:= apsElements[iMAX_NUM_ELEMENTS_C479*i+7]^;\n\t\t\t\t\t\n\t\t\t\t\t// Where are I/O addresses in C-0-0510\n\t\t\t\t\tapiPointerToC510[j] := ADR (aiC510[i+1]);\t\n\t\t\t\t\tj := j +1;\t\t\t\n\t\t\t\tEND_IF\n\t\t\tEND_IF\n\t\t//\ti:=i+1;\n\t\t//UNTIL( arElements[iMAX_NUM_ELEMENTS_C479*i+1]^ = '' OR i >= MAX_SERCOS_DEVICES )\n\t\t//END_REPEAT\n\t\tEND_FOR\n\n\t\tiState := 50;\n\t\tiActNoOfSercosIO := j-1;\n\t\tiActNoOfDrives := k-1;\n\t\t\n\t\ti := 1;\n\t\tk := 65;\n\t\tj := 0;\n\t\tl := 1;\n\n\n\t\t\n(* ################################################################################ *)\t\n// Sort AxesActConfig by locical address\n(* ################################################################################ *)\t\t\t\t\n\t50:\n\t\t\t// real axis configured\n\t\t\tIF aiC484[i] = 8 THEN\n\t\t\t\tFOR j := 1 TO iMAX_AXES_NUMBER DO\n\t\t\t\t\t// if Sercos address is configured copy to temp structure\n\t\t\t\t\tIF aiC484[i+1] = refastAxesActConfig[j].iSercosAddress THEN\n\t\t\t\t\t\tastAxesActConfigTmp[(i+1)/2] := refastAxesActConfig[j];\n\t\t\t\t\t\tM_DelStructure(ADR(refastAxesActConfig[j]), SIZEOF(refastAxesActConfig[j]));\n\t\t\t\t\t\tj := iMAX_AXES_NUMBER +1;\t// Stop Loop\n\t\t\t\t\tEND_IF\n\t\t\t\tEND_FOR\n\t\t\tELSIF  aiC484[i] = 16 THEN\n \t\t\t\tastAxesActConfigTmp[(i+1)/2].bVirtualAxis := TRUE;\t\n\t\t\tEND_IF\n\t\t\t\t\t\t\n\t\t\tIF i < ((2*iMAX_AXES_NUMBER) -1 ) THEN\t\n\t\t\t\ti := i +2;\n\t\t\tELSE\n\t\t\t\tFOR j := 1 TO iMAX_AXES_NUMBER DO\n\t\t\t\t\tIF refastAxesActConfig[j].bRealAxis THEN\n\t\t\t\t\t// Save Sercos Address if drive was found but not configured in C-0-0578\t\n\t\t\t\t\t\trefastFoundDrivesError[l].bError := TRUE;\n\t\t\t\t\t\trefastFoundDrivesError[l].iSercosAddress := refastAxesActConfig[j].iSercosAddress;\n\t\t\t\t\t\trefastFoundDrivesError[l].sErrorMessage := 'Axis with sercos adress ';\n\t\t\t\t\t\tsTemp2 := INT_TO_STRING(refastFoundDrivesError[l].iSercosAddress);\n\t\t\t\t\t\t//strConcat(ADR(FoundDrivesError[l].ErrorMessage), SIZEOF(FoundDrivesError[l].ErrorMessage) ,\tADR(strTemp));\t\n\t\t\t\t\t\tIL_CONCAT(ADR(refastFoundDrivesError[l].sErrorMessage), ADR(sTemp2), ADR(refastFoundDrivesError[l].sErrorMessage), SIZEOF(refastFoundDrivesError[l].sErrorMessage));\t\t\t\t\n\t\t\t\t\t\tsTemp2 := 'found, but not configured with IndraWorks (C-0-0578)';\n\t\t\t\t\t\t//strConcat(ADR\t(FoundDrivesError[l].ErrorMessage), SIZEOF(FoundDrivesError[l].ErrorMessage) ,\tADR(strTemp));\n\t\t\t\t\t\tIL_CONCAT(ADR(refastFoundDrivesError[l].sErrorMessage), ADR(sTemp2), ADR(refastFoundDrivesError[l].sErrorMessage), SIZEOF(refastFoundDrivesError[l].sErrorMessage));\n\t\t\t\t\t\t\n\t\t\t\t\t\tIF sDiagMessageInt = '' THEN\n\t\t\t\t\t\t\tsDiagMessageInt := refastFoundDrivesError[l].sErrorMessage;\n\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\n\t\t\t\t\t\tML_SetDiagEntry(\n\t\t\t\t\t\t\tSeverity:= enSeverity, \n\t\t\t\t\t\t\tClass:= enClass, \n\t\t\t\t\t\t\tFacility:= E_LOG_FACILITY.USER, \n\t\t\t\t\t\t\tCode:= wDIAG_CODE, \n\t\t\t\t\t\t\tText:= ADR(refastFoundDrivesError[l].sErrorMessage));\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tl := l +1;\n\t\t\t\t\t\tbErrorTemp := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tEND_IF\n\t\t\t\t \trefastAxesActConfig [j] := astAxesActConfigTmp[j];\t// copy tmp structure back to origuinal structure\n\t\t\t\tEND_FOR\n\t\t\t\tiState := 53;\n\t\t\t\ti := 1;\n\t\t\tEND_IF\t\n\t\t\n\t\t\tIF bErrorTemp THEN\n\t\t\t\t// If error stop FB\n\t\t\t\tOUT_ErrorID := \tRESOURCE_ERROR;\n\t\t\t\tOUT_ErrorIdent.Table :=\tUSER1_TABLE;       \n\t\t\t\tOUT_ErrorIdent.Additional1 := 16#F0002;\n\t\t\t\tOUT_ErrorIdent.Additional2 := 16#F0000;\n\t\t\t\t\n\t\t\t\tiState := 998;\n\t\t\tEND_IF\t\t\t\t\n\n(* ################################################################################ *)\t\n\t// Activate all found axes \n\t// necessary to acces S-/P-Parameter\n(* ################################################################################ *)\t\n\t53: \n\t\tIF IN_bConfigAxes OR bUpdateFirmware THEN\n\t\t\tREPEAT \t// only new cycle if A24 need to be written\n\t\t\t\t// activate drive if found on ring\n\t\t\t\tIF refastAxesActConfig[i].bAvailable THEN \n\t\t\t\t\tstDummyAxis.AxisNo := i;\n\t\t\t\t\tiA24 := 0;\n\t\t\t\t\t\n\t\t\t\t\tIF NOT (iA24 = DWORD_TO_DINT(AxisData[stDummyAxis.AxisNo].dwAxisCondition_i)) THEN\t\t// write A24 only if necessary)\n\t\t\t\t\t\tbExecuteWriteA24 := TRUE;\n\t\t\t\t\tEND_IF\t\n\t\t\t\tELSIF aiC484[(2*i)-1] = 8 THEN\n\t\t\t\t\tstDummyAxis.AxisNo := i;\n\t\t\t\t\tiA24 := 2 ;\n\t\t\t\t\t\n\t\t\t\t\tIF NOT (iA24 = DWORD_TO_DINT(AxisData[stDummyAxis.AxisNo].dwAxisCondition_i)) THEN\t\t// write A24 only if necessary)\n\t\t\t\t\t\tbExecuteWriteA24 := TRUE;\n\t\t\t\t\tEND_IF\t\n\t\t\t\tEND_IF\n\t\t\t\t\t\t\n\t\t\t\tfbWriteA24(\n\t\t\t\t\tExecute:= bExecuteWriteA24, \n\t\t\t\t\tParameterNumber:= FP_A_0_0024, \n\t\t\t\t\tValue:= iA24, \n\t\t\t\t\tAxis:= stDummyAxis);\t\n\t\t\t\t\t\t\t\n\t\t\t\t// NEXT Step\n\t\t\t\tIF fbWriteA24.Done OR NOT bExecuteWriteA24 THEN\t\n\t\t\t\t\tbExecuteWriteA24 := FALSE;\n\t\t\t\t\tfbWriteA24(\n\t\t\t\t\t\tExecute:= FALSE, \n\t\t\t\t\t\tAxis:= stDummyAxis );\t\n\t\t\t\t\ti := i + 1;\n\t\t\t\t\n\t\t\t\t// Error\t\n\t\t\t\tELSIF fbWriteA24.Error THEN\n\t\t\t\t\tOUT_ErrorID \t:= fbWriteA24.ErrorID;\n\t\t\t\t\tOUT_ErrorIdent \t:= fbWriteA24.ErrorIdent;\n\t\t\t\t\tfbWriteA24(Execute\t:= FALSE,\n\t\t\t\t\t\t\t\tAxis\t:= stDummyAxis);\n\t\t\t\t\t\n\t\t\t\t\tiState \t\t:= 998;\n\t\t\t\tEND_IF\t\n\t\t\t\n\t\t\t\n\t\t\t\tIF i > iMAX_AXES_NUMBER THEN \n\t\t\t\t\ti := 1;\n\t\t\t\t\tiState := 55;\n\t\t\t\tEND_IF\n\t\t\t\t\n\t\t\tUNTIL bExecuteWriteA24 OR (iState = 55) OR (iState = 998)\n\t\t\tEND_REPEAT\t\t\n\t\tELSE\n\t\t\ti := 1;\n\t\t\tiState := 55;\n\t\tEND_IF\n(* ################################################################################ *)\t\n\t// Read name A-0-0002 \n(* ################################################################################ *)\t\n\t55:\n\t\tREPEAT \t// only new cycle if A-0-0002 needs to be read\n\t\t\tstDummyAxis.AxisNo := i;\n\t\t\n\t\t\tbExecuteReadName := (aiC484[2*(i-1)+1] = 8) OR (aiC484[2*(i-1)+1] = 16); // Real (8) and Virtual (16) Axes\n\t\t\t\n\t\t\tfbReadStringParameter(\n\t\t\t\tExecute:= bExecuteReadName, \n\t\t\t\tParameterNumber:=FP_A_0_0002, \n\t\t\t\tAxis:= stDummyAxis, \n\t\t\t\tDone=> , \n\t\t\t\tActive=> , \n\t\t\t\tError=> , \n\t\t\t\tErrorID=> , \n\t\t\t\tErrorIdent=> , \n\t\t\t\tValue=> refastAxesActConfig[i].sName );\t\n\t\n\t\t\tIF NOT fbReadStringParameter.Execute THEN\n\t\t\t\trefastAxesActConfig[i].sName := '';\n\t\t\tEND_IF\n\t\t\t\t\n\t\t\tIF \tfbReadStringParameter.Done OR NOT bExecuteReadName THEN\n\t\t\t\ti := i +1 ;\n\t\t\t\tbExecuteReadName := FALSE;\n\t\t\t\t\n\t\t\t\tfbReadStringParameter(\n\t\t\t\t\tExecute:= FALSE , \n\t\t\t\t\tParameterNumber:=FP_A_0_0002 , \n\t\t\t\t\tAxis:= stDummyAxis);\n\t\t\t\t\t\n\t\t\t\tIF i > MB_MAX_AXIS_NUMBER THEN\n\t\t\t\t\ti := 1;\n\t\t\t\t\tiState := 56;\n\t\t\t\tEND_IF\t\n\t\t\t\t\n\t\t\tELSIF fbReadStringParameter.Error THEN\n\t\t\t\t\tOUT_ErrorID \t:= fbReadStringParameter.ErrorID;\n\t\t\t\t\tOUT_ErrorIdent \t:= fbReadStringParameter.ErrorIdent;\n\t\t\t\t\tfbReadStringParameter(Execute\t:= FALSE,\n\t\t\t\t\t\t\t\t\t\tAxis\t:= stDummyAxis);\n\t\t\t\t\tiState \t\t:= 998;\t\n\t\t\tEND_IF\n\t\n\t\t\t\n\t\tUNTIL bExecuteReadName OR (iState = 56) OR (iState = 998)\n\t\tEND_REPEAT\t\n\t\t\n\t\t\n(* ################################################################################ *)\t\n\t// Read SerialNo of Drive\n(* ################################################################################ *)\t\n\t\t\n\t56:\n\t\tstDummyAxis.AxisNo := i;\n\t\trefastAxesActConfig[i].udiSerialNo := 0;\n\t\t\n\t\tbExecuteReadSerialNo := (aiC484[2*(i-1)+1] = 8) AND refastAxesActConfig[i].bAvailable;\n\t\t\n\t\tfbReadListParameter(\n\t\t\tExecute\t\t\t:= bExecuteReadSerialNo, \n\t\t\tParameterNumber\t:= GVL_P_Param_ID.FP_P_0_1518, \n\t\t\tNoOfBytes\t\t:= SIZEOF(audiP1518), \n\t\t\tValueAdr\t\t:= ADR(audiP1518), \n\t\t\tAxis\t\t\t:= stDummyAxis);\t\n\t\n\t\tIF \tfbReadListParameter.Done OR NOT bExecuteReadSerialNo THEN\n\t\t\tIF fbReadListParameter.Done THEN\n\t\t\t\trefastAxesActConfig[i].udiSerialNo :=\taudiP1518[4];\t// ELEMENT 4 of P-0-1518\n\t\t\tEND_IF\n\t\t\t\n\t\t\ti := i +1 ;\n\t\t\t\n\t\t\tfbReadListParameter(\n\t\t\t\tExecute:= FALSE , \n\t\t\t\tParameterNumber:= GVL_P_Param_ID.FP_P_0_1518,\n\t\t\t\tAxis:= stDummyAxis);\n\t\t\t\t\n\t\t\tIF i >\tMB_MAX_AXIS_NUMBER THEN\n\t\t\t\ti := 1;\n\t\t\t\tsTemp2 := '';\n\t\t\t\tiState \t\t:= 57;\n\t\t\tEND_IF\t\n\t\t\t\n\t\tELSIF fbReadListParameter.Error THEN\n\t\t\t\tOUT_ErrorID \t:= fbReadListParameter.ErrorID;\n\t\t\t\tOUT_ErrorIdent \t:= fbReadListParameter.ErrorIdent;\n\t\t\t\tfbReadListParameter(Execute\t:= FALSE,\n\t\t\t\t\t\t\t\t\tAxis\t:= stDummyAxis);\n\t\t\t\tiState \t\t:= 998;\t\n\t\tEND_IF\n\n(* ################################################################################ *)\t\n\t// Read Safety Type\n(* ################################################################################ *)\t\n\t\t\t\t\n\t57:\n\t\tstDummyAxis.AxisNo := i;\n\t\trefastAxesActConfig[i].sSafetyType :=\t'';\n\t\tsTemp2 := '';\n\t\t\n\t\tbExecuteReadSafetyType := (aiC484[2*(i-1)+1] = 8) AND refastAxesActConfig[i].bAvailable;\n\t\n\t\tfbReadStringParameter(\n\t\t\tExecute:= bExecuteReadSafetyType , \n\t\t\tParameterNumber:= FP_P_0_1520, \n\t\t\tAxis:= stDummyAxis);\t\n\t\t\t\n\t\tIF fbReadStringParameter.Done THEN\n\t\t\tsTemp2 := fbReadStringParameter.Value;\n\t\tEND_IF\n\t\t\t\t\t\t\n\t\tIF \tfbReadStringParameter.Done OR NOT bExecuteReadSafetyType THEN\n\t\t\t\n\t\t\tudiNoOfElements := IL_StrSplit(ADR(sTemp2),'-',0,FALSE,ADR(apsElements2),TO_UDINT(SIZEOF(apsElements2) - TO_INT(NOT TO_BOOL(LEN(sTemp2)))) );\n\t\t//\tIL_StrSplit(ADR(strTemp),'-',0,FALSE,ADR(arElements2),TO_UDINT(SIZEOF(arElements2) - TO_INT(NOT TO_BOOL(LEN(strTemp)))) );\n\t\t\t{warning 'JS: strSplit'}\n\t\t\t//strSplit(ADR(strTemp),CHAR_MINUS,0,FALSE,ADR(arElements));\n\t\t\t // S4 or L3 or L4 or etc\n\t\t\tIF udiNoOfElements >= 5 THEN \n\t\t\t\trefastAxesActConfig[i].sSafetyType  := M_GetSafetyType(apsTypeCodeElements:=apsElements2 , bSecondDoubleAxis:=FALSE );\n\t\t\tELSE\n\t\t\t\trefastAxesActConfig[i].sSafetyType  := '';\n\t\t\tEND_IF\n\t\t\t\n\t\t\ti := i +1 ;\n\t\t\tsTemp2 := '';\n\t\t\tfbReadStringParameter(\n\t\t\t\tExecute:= FALSE , \n\t\t\t\tParameterNumber:=FP_P_0_1520 , \n\t\t\t\tAxis:= stDummyAxis);\n\t\t\t\t\n\t\t\tIF i >\tMB_MAX_AXIS_NUMBER THEN\n\t\t\t\ti := 1;\t(* 2018-07-03 Kohl: war 0, aber Array mit Index 0 ist nicht zugelassen, deshalb 1 *)\n\t\t\t\tiState \t\t:= 59;\n\t\t\tEND_IF\t\n\t\t\t\n\t\tELSIF fbReadStringParameter.Error THEN\n\t\t\t\tOUT_ErrorID \t:= fbReadStringParameter.ErrorID;\n\t\t\t\tOUT_ErrorIdent \t:= fbReadStringParameter.ErrorIdent;\n\t\t\t\tfbReadStringParameter(Execute\t:= FALSE,\n\t\t\t\t\t\t\t\t\tAxis\t:= stDummyAxis);\n\t\t\t\tiState \t\t:= 998;\t\n\t\tEND_IF\n\t\t\n\n(* ################################################################################ *)\t\n\t// Read Firmware directory\n(* ################################################################################ *)\t\t\t\n\t\t\n//58:\n//\t// copy to internal variable\n//\tsFirmwareDirectoryTemp := stDriveFirmwarePath;\n//\n//\t// try to open directory\n//\tudiDirHandle := SysDirOpen(\n//\t\t\t\t\tszDir:=sFirmwareDirectoryTemp , \n//\t\t\t\t\tszDirEntry:= sTemp1, \n//\t\t\t\t\tdiMaxDirEntry:= 99  , \n//\t\t\t\t\tpDirInfo:=ADR(ar_stDirInfo) , \n//\t\t\t\t\tpResult:=ADR(udiResultOpen) );\n//\n//\t// directory could be opened \t\t\t\t\t\n//\tIF (udiResultOpen = Errors.ERR_OK) THEN\n//\t\t// delet structure\n//\t\tFOR i := 1 TO MAX_NO_FIRMWARE_FILES DO\n//\t\t\tar_sFirmwareFiles[i] := '';\n//\t\tEND_FOR\n//\t\tuiNoOfFimrwareFiles := 0;\n//\t\t\n//\t\t// read all files\n//\t\tuiFileNo := 1;\n//\t\tudiResultRead := SysDirRead(hDir:=udiDirHandle , szDirEntry:=ar_sFirmwareFiles[uiFileNo] , diMaxDirEntry:= 99, pDirInfo:= 0);\n//\t\tREPEAT \n//\t\t\tudiResultRead := SysDirRead(hDir:=udiDirHandle , szDirEntry:=ar_sFirmwareFiles[uiFileNo] , diMaxDirEntry:= 99, pDirInfo:= 0);\n//\t\t\t\n//\t\t\t//END , no more files available\n//\t\t\tIF (udiResultRead = Errors.ERR_END_OF_OBJECT) THEN\n//\t\t\t\tar_sFirmwareFiles[uiFileNo] := '';\n//\t\t\t\tuiFileNo := uiFileNo -1;\n//\t\t\tELSE\t\n//\t\t\t\tar_stFirmwareFilesType[uiFileNo]:=\tMO_DUT_funGetFirmwareType(ar_sFirmwareFiles[uiFileNo]);\n//\t\t\t\tuiFileNo := uiFileNo +1;\n//\t\t\tEND_IF\t\n//\t\t\t\n//\t\tUNTIL (udiResultRead = Errors.ERR_END_OF_OBJECT)\n//\t\tEND_REPEAT \n//\t\tuiNoOfFirmwareFiles := uiFileNo;\n//\t\tSysDirClose(hDir:=udiDirHandle );\n//\t\t\n//\t\t// finish\n//\t\ti := 1;\n//\t\tiState \t\t:= 59;\t\t\n//\tELSE\t// directory does not exist\n//\t\t\n//\t\t// create directory\n//\t\tudiResutlCreate := SysDirCreate(szDir:=sFirmwareDirectoryTemp);\n//\t\t// finish\n//\t\ti := 1;\n//\t\tiState \t\t:= 59;\t\t\n//\tEND_IF\n\n(* ################################################################################ *)\t\n\t// Read IP address from drive \n(* ################################################################################ *)\t\t\t\n\t59:\t\n\t\tREPEAT \t// only new cycle if S-0-1020 needs to be read\n\t\t\tstDummyAxis.AxisNo := i;\n\t\t\n\t\t\tbExecuteReadName := (aiC484[2*(i-1)+1] = 8) \t\t\t// Real (8) \n\t\t\t\t\t\t\t\tAND refastAxesActConfig[i].bAvailable \n\t\t\t\t\t\t\t\tAND (\n\t\t\t\t\t\t\t\t\t(AxisData[stDummyAxis.AxisNo].dwAxisCondition_i = 0)  \n\t\t\t\t\t\t\t\t\tOR (AxisData[stDummyAxis.AxisNo].dwAxisCondition_i = 1) \n\t\t\t\t\t\t\t\t\tOR (AxisData[stDummyAxis.AxisNo].dwAxisCondition_i = 4) \n\t\t\t\t\t\t\t\t\tOR (AxisData[stDummyAxis.AxisNo].dwAxisCondition_i = 5)\n\t\t\t\t\t\t\t\t\tOR (AxisData[stDummyAxis.AxisNo].dwAxisCondition_i = 8) \n\t\t\t\t\t\t\t\t\tOR (AxisData[stDummyAxis.AxisNo].dwAxisCondition_i = 9)\n\t\t\t\t\t\t\t\t\tOR (AxisData[stDummyAxis.AxisNo].dwAxisCondition_i = 12)\n\t\t\t\t\t\t\t\t\tOR (AxisData[stDummyAxis.AxisNo].dwAxisCondition_i = 13)\n\t\t\t\t\t\t\t\t\t);\n    \n\t\t\tfbReadListParameter(\n\t\t\t\tExecute:= bExecuteReadName , \n\t\t\t\tParameterNumber:= FP_S_0_1020 , \n\t\t\t\tNoOfBytes:= SIZEOF(abDriveIP) , \n\t\t\t\tValueAdr:= ADR(abDriveIP), \n\t\t\t\tDone=> , \n\t\t\t\tActive=> , \n\t\t\t\tError=> , \n\t\t\t\tErrorID=> , \n\t\t\t\tErrorIdent=> , \n\t\t\t\tNoOfRecBytes=> , \n\t\t\t\tAxis:=stDummyAxis );\t\n\t\t\t\t\t\t\t\n\t\t\tIF \tfbReadListParameter.Done OR NOT bExecuteReadName THEN\n\t\t\t\tIF \tbExecuteReadName THEN\t\t\t\n\t\t\t\t\trefastAxesActConfig[i].sIP := '';\n\t\t\t\t\tsTemp2 := BYTE_TO_STRING(abDriveIP[0]) ;\n\t\t\t\t\t//strConcat(ADR(AxesActConfig[i].IP), SIZEOF(AxesActConfig[i].IP) ,ADR(strTemp));\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesActConfig[i].sIP), ADR(sTemp2), ADR(refastAxesActConfig[i].sIP), SIZEOF(refastAxesActConfig[i].sIP));\n\t\t\t\t\tsTemp2 := '.' ;\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesActConfig[i].sIP), ADR(sTemp2), ADR(refastAxesActConfig[i].sIP), SIZEOF(refastAxesActConfig[i].sIP));\n\t\t\t\t\tsTemp2 := BYTE_TO_STRING(abDriveIP[1]) ;\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesActConfig[i].sIP), ADR(sTemp2), ADR(refastAxesActConfig[i].sIP), SIZEOF(refastAxesActConfig[i].sIP));\n\t\t\t\t\tsTemp2 := '.' ;\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesActConfig[i].sIP), ADR(sTemp2), ADR(refastAxesActConfig[i].sIP), SIZEOF(refastAxesActConfig[i].sIP));\n\t\t\t\t\tsTemp2 := BYTE_TO_STRING(abDriveIP[2]) ;\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesActConfig[i].sIP), ADR(sTemp2), ADR(refastAxesActConfig[i].sIP), SIZEOF(refastAxesActConfig[i].sIP));\n\t\t\t\t\tsTemp2 := '.' ;\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesActConfig[i].sIP), ADR(sTemp2), ADR(refastAxesActConfig[i].sIP), SIZEOF(refastAxesActConfig[i].sIP));\n\t\t\t\t\tsTemp2 := BYTE_TO_STRING(abDriveIP[3]) ;\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesActConfig[i].sIP), ADR(sTemp2), ADR(refastAxesActConfig[i].sIP), SIZEOF(refastAxesActConfig[i].sIP));\n\t\t\t\tELSE\t\n\t\t\t\t\trefastAxesActConfig[i].sIP := '';\n\t\t\t\tEND_IF \n\t\t\t\ti := i +1 ;\n\t\t\t\tbExecuteReadName := FALSE;\n\t\t\t\t\n\t\t\t\tfbReadListParameter(\n\t\t\t\t\tExecute:= FALSE , \n\t\t\t\t\tParameterNumber:=FP_S_0_1020 , \n\t\t\t\t\tAxis:= stDummyAxis);\n\t\t\t\t\t\n\t\t\t\tIF i > MB_MAX_AXIS_NUMBER THEN\n\t\t\t\t\ti := 0;\n\t\t\t\t\tiState := 60;\n\t\t\t\tEND_IF\t\n\t\t\t\t\n\t\t\tELSIF fbReadListParameter.Error THEN\n\t\t\t\t\tOUT_ErrorID \t:= fbReadListParameter.ErrorID;\n\t\t\t\t\tOUT_ErrorIdent \t:= fbReadListParameter.ErrorIdent;\n\t\t\t\t\tfbReadListParameter(Execute\t:= FALSE,\n\t\t\t\t\t\t\t\t\t\tAxis\t:= stDummyAxis);\n\t\t\t\t\tiState \t\t:= 998;\t\n\t\t\tEND_IF\t\n\t\tUNTIL bExecuteReadName OR (iState = 60) OR (iState = 998)\n\t\tEND_REPEAT\t\t\n\t\n\t\t\n\t\t\n(* ################################################################################ *)\t\n\t// Read ata0b directory\n(* ################################################################################ *)\t\t\t\n\t\t\n\t60:\t\n\t\tiEntry := 0;\n\t\tdiMaxEntry := SIZEOF(astDirEntry[iEntry].sEntry);\n\t\tResult := SysDirSetCurrent(sPathNameInt);\n\t\thDir := SysDirOpen('', astDirEntry[iEntry].sEntry, diMaxEntry, ADR(dir), ADR(Result));\n\t\tiEntry := iEntry + 1;\n\t\tWHILE Result = Errors.ERR_OK AND hDir <> RTS_INVALID_HANDLE AND iEntry < iMAX_DIR_ENTRY DO\n\t\t\tdiMaxEntry := SIZEOF(astDirEntry[iEntry].sEntry);\n\t\t\tResult := SysDirRead(hDir, astDirEntry[iEntry].sEntry, diMaxEntry, ADR(dir));\n\t\t\tIF (DINT_TO_UDINT(dir.diDirectory) AND DirInfoFlags.DF_DIRECTORY) <> 0 THEN\n\t\t\t\tastDirEntry[iEntry].bDirectory := TRUE;\n\t\t\tEND_IF\n\t\t\tiEntry := iEntry + 1;\t\n\t\tEND_WHILE\n\t\tResult := SysDirClose(hDir);\n\t\tiEntry := iEntry -2;\n\t\t\n\t\t\n\t\t// create new file or open existing?\n\t\tfb_SysFileOpenAsync.stMode := 'rw';\n\n\t\t// 2018-07-03: JK Zählerstart geändert von 1 -> 0, weil im Array schon an der Stelle 0 Informationen stehen\t\t\n\t\tFOR i := 0 TO iEntry DO\n\t\t\tIF NOT astDirEntry[i].bDirectory THEN\n\t\t\t\tIF astDirEntry[i].sEntry = sFILE_NAME THEN\n\t\t\t\t\tfb_SysFileOpenAsync.stMode := 'r';\n\t\t\t\tEND_IF\n\t\t\tEND_IF\n\t\tEND_FOR\n\t\t\t\t\n\t\tiState \t\t:= 65;\t\t\n\t\t\t\n\t\t\n(* ################################################################################ *)\t\n\t// Open UserDefs.cfg \n(* ################################################################################ *)\t\n\t65:\t\t\n\t\tfb_SysFileOpenAsync(\n\t\t\tbEnable:= TRUE, \n\t\t\tstFileName:= sFILE_AND_PATH, \n\t\t\tstMode:= , \n\t\t\tbDone=> , \n\t\t\tbBusy=> , \n\t\t\tbError=> , \n\t\t\twErrorId=> , \n\t\t\thFile=> hCfg);\n\t\n\t\t\t\n\t\tIF fb_SysFileOpenAsync.bDone THEN\n\t\t\tfb_SysFileOpenAsync(\n\t\t\t\tbEnable:= FALSE);\n\t\t\tsBuffer := '';\t\n\t\t\tiState :=70;\n\t\tEND_IF\n\t\n\t\t// Error\t\n\t\tIF fb_SysFileOpenAsync.bError THEN\n\t\t\tfb_SysFileOpenAsync(\n\t\t\t\tbEnable:= FALSE);\n\t\t\tiState :=998;\n\t\tEND_IF\n\t\t\n(* ################################################################################ *)\t\n\t// Read UserDefsCfg \n(* ################################################################################ *)\t\n\t70:\t// DevicePlcAdd.cfg lesen\n\t\tfb_SysFileReadAsync(\n\t\t\tbEnable:= TRUE, \n\t\t\thFile:= hCfg, \n\t\t\tpBuffer:= ADR(sBuffer), \n\t\t\tdwSize:= INT_TO_DWORD(iFileSize), \n\t\t\tbDone=> , \n\t\t\tbBusy=> , \n\t\t\tbError=> , \n\t\t\twErrorId=> , \n\t\t\tdwRead=> dwReadBytes );\n\t\n\t\tIF fb_SysFileReadAsync.bDone THEN\n\t\t\tfb_SysFileReadAsync(\n\t\t\t\tbEnable:= FALSE);\n\t\t\tiState := 80;\n\t\tEND_IF\n\t\n\t\t// Error\t\n\t\tIF fb_SysFileReadAsync.bError THEN\n\t\t\tfb_SysFileReadAsync(\n\t\t\t\tbEnable:= FALSE);\n\t\t\tiState :=998;\n\t\tEND_IF\n\t\n80: // Datei schließen\n\tfb_SysFileCloseAsync(\n\t\tbEnable:= TRUE, \n\t\thFile:= hCfg, \n\t\tbDone=> , \n\t\tbBusy=> , \n\t\tbError=> , \n\t\twErrorId=> );\n\n\tIF fb_SysFileCloseAsync.bDone THEN\n\t\tfb_SysFileCloseAsync(\n\t\t\tbEnable:= FALSE);\n\t\tiState :=90;\n\tEND_IF\n\n\t// Error\t\n\tIF fb_SysFileCloseAsync.bError THEN\n\t\tfb_SysFileCloseAsync(\n\t\t\tbEnable:= FALSE);\n\t\tiState :=998;\n\tEND_IF\n\t\n90: // Datei in Array of String kopieren und Formatzeichen löschen\n\t// split String\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Workaround Defdb00192639, -1 if string is empty\t\t\t\t\t\n\tudiNoOfElements := IL_StrSplit(ADR(sBuffer),IL_Ascii_to_Char(13),0,FALSE,ADR(apsSplit),TO_UDINT(SIZEOF(apsSplit) - TO_INT(NOT TO_BOOL(LEN(sBuffer)))) ); \n\t{warning 'JS: strSplit'}\n\t//strSplit(ADR(Buffer),13 ,0,FALSE,ADR(arSplit));\n\t\n\tsLineFeed := IL_Ascii_to_Char(10);\n\tiEOF := UDINT_TO_INT(udiNoOfElements);\n\t\n\tFOR i := 1 TO UDINT_TO_INT(udiNoOfElements) DO \n\t\t//arStringActCfg[i] := DEL_CHARS(arSplit[i]^, strLineFeed);\n\t\tIL_StrTrimAll(SourceStr:=apsSplit[i] , DstStr:=ADR(asStringActCfg[i]) , Char:=sLineFeed , MaxLen:=SIZEOF(apsSplit[i]^)-1 );\n\tEND_FOR\n\t\n\t// letzte Zeile löschen\n\tIF iEOF > 2 THEN\n\t\tasStringActCfg[iEOF-1] := ''; \n\t\tiEOF\t:= iEOF-2;\n\tEND_IF\t\n\t\n\tiState := 91;\t\n\t\n\t\n(* ################################################################################ *)\t\n\t// Read Inline IO Config \n(* ################################################################################ *)\t\n91:\t\n\tfbINLNModuleConfigList(\n\t\tExecute:= TRUE, \n\t\tSizeOfModuleConfig:=  SIZEOF(InlineIOCfg), \n\t\tModuleConfigAdr:= ADR(InlineIOCfg), \n\t\tDone=> , \n\t\tActive=> , \n\t\tError=> , \n\t\tErrorID=> , \n\t\tErrorIdent=> , \n\t\tNoOfModuleConfig=> udiNoOfModuleConfig  );\n\n\t\n\tIF fbINLNModuleConfigList.Done THEN\n\t\tFOR i := 1 TO iMAX_INLINE_IO DO\t\n\t\t\tIF InlineIOCfg[i].ModuleIdSCN <> 0 THEN\n\t\t\t\trefastInlineIOActConfig[i].bAvailable := TRUE;\n\t\t\t\t{warning disable C0196}\n\t\t\t\trefastInlineIOActConfig[i].eIOType := InlineIOCfg[i].ModuleIdSCN;\n\t\t\t\t{warning restore C0196}\n\t\t\tEND_IF\n\t\tEND_FOR\n\t\t\n\t\tfbINLNModuleConfigList(\n\t\t\t\tExecute:= FALSE );\n\n\t\ti := 1;\n\t\tiState := 92;\n\tELSIF fbINLNModuleConfigList.Error THEN\n\t\tfbINLNModuleConfigList(\n\t\t\t\tExecute:= FALSE );\n\t\ti := 1;\t\t\n\t\tiState := 92;\n\tEND_IF\n\n(* ################################################################################ *)\t\n\t// Read S20BK+ ModuleType\n(* ################################################################################ *)\t\n92:\t\n\t\tstDummyAxis.AxisNo := Objects.SERCOS_ADDRESS_1 + refastSercosIOActConfig[i].iSercosAddress -1;\n\t\n\t\t//SercosIOActConfig[i].TypeCode := DUT_S20Type.S20_UNDEFINED;\n\t\t\n\t\t// Only with S20 BK+\n\t\tbExecuteReadModuleType:= refastSercosIOActConfig[i].bAvailable AND (refastSercosIOActConfig[i].sTypeCode ='R911173318');\t\n\t\t        \n\t\tfbReadListParameter(\n\t\t\tExecute\t\t\t:= bExecuteReadModuleType, \n\t\t\tParameterNumber\t:= IL_SIIIElementsToIdn(IL_S_PARAM, 0, 1500, 0, 3),(*= Idn = S-0-1500.0.3*) \t\t\t\n\t\t\tNoOfBytes\t\t:= SIZEOF(aliS1500_0_3), \n\t\t\tValueAdr\t\t:= ADR(aliS1500_0_3), \n\t\t\tAxis\t\t\t:= stDummyAxis);\t\n\t\n\t\tIF \tfbReadListParameter.Done OR NOT bExecuteReadModuleType THEN\n\t\t\tIF fbReadListParameter.Done THEN\t\t\t\n\t\t\t\tFOR j := 0 TO iMAX_MODULE_ON_SERCOS_IO DO\n\t\t\t\t\trefastSercosIOActConfig[i].astIOModule[j].IOType := aliS1500_0_3[j];\n\t\t\t\t\trefastSercosIOActConfig[i].astIOModule[j].bAvailable :=  (aliS1500_0_3[j] <> LINT#0);\n\t\t\t\tEND_FOR\t\t\t\n\t\t\tEND_IF\n\t\t\t\n\t\t\ti := i +1 ;\t\n\t\t\tfbReadListParameter(\n\t\t\t\tExecute:= FALSE , \n\t\t\t\tAxis:= stDummyAxis);\n\t\t\t\t\n\t\t\tIF i > iMAX_SERCOS_IO(*MB_MAX_AXIS_NUMBER*) THEN\t\t(* 2018-07-03 Kohl: nun MAX_SERCOS_IO, war MB_MAX_AXIS_NUMBER *)\n\t\t\t\ti := 1;\n\t\t\t\tsTemp2 := '';\n\t\t\t\tiState \t\t:= 99;\n\t\t\tEND_IF\t\n\t\t\t\n\t\tELSIF fbReadListParameter.Error THEN\n\t\t\t\tOUT_ErrorID \t:= fbReadListParameter.ErrorID;\n\t\t\t\tOUT_ErrorIdent \t:= fbReadListParameter.ErrorIdent;\n\t\t\t\tfbReadListParameter(Execute\t:= FALSE,\n\t\t\t\t\t\t\t\t\tAxis\t:= stDummyAxis);\n\t\t\t\tiState \t\t:= 998;\t\n\t\tEND_IF\n\n(* ################################################################################ *)\t\n\t// End \n(* ################################################################################ *)\t\n\t99:\t\t\n\t\tiState := 100;\n\t\t\t\nEND_CASE\n\t\t\t","LineInfoPersistence":"(string)935f258b-605f-4f36-9450-a3611768f4cb_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)METHOD M_0ReadActConfig : BOOL\n","LineInfoPersistence":"(string)935f258b-605f-4f36-9450-a3611768f4cb_Decl_LineIds"}}}}}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","f8a58466":"{f8a58466-d7f6-439f-bbb8-d4600e41d099}","string":"System.String"}}},"FormatVersion":"1.0"}