{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)e22b231f-05eb-4869-9656-4d96da42634c","ParentGuid":"(Guid)3d853929-dfea-49d3-9ccd-f0b5d5e9e6d3","Name":"(string)M_1ConfigAxes","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)24568a24-c491-472c-a21f-ee5d33859fab","@Value":{"@Type":"24568a24","@Value":{"MemoryReserveForOnlineChange":"(int)0","ExcludeFromBuild":"(bool)False","External":"(bool)False","EnableSystemCall":"(bool)False","CompilerDefines":"(string)","LinkAlways":"(bool)False","Undefines":{"@Type":"[string]","@Value":[]}}}}]},"TypeGuid":"(Guid)f8a58466-d7f6-439f-bbb8-d4600e41d099","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"24568a24":"{24568a24-c491-472c-a21f-ee5d33859fab}","2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","bool":"System.Boolean","Guid":"System.Guid","int":"System.Int32","string":"System.String"}},"object":{"Graph":{"@Type":"f8a58466","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)\nCASE iState OF\n\n\t100:\n\t\t\tIF IN_bCheckAxesConfig AND (IN_bConfigAxes OR bUpdateFirmware) THEN \n\t\t\t\tiState := 110;\n\t\t\tELSIF IN_bConfigAxes OR bUpdateFirmware THEN\n\t\t\t\ti := 1;\n\t\t\t\tiState := 120;\t\n\t\t\tELSE\n\t\t\t\tiState := 199;\t\n\t\t\tEND_IF\n\n(* ################################################################################ *)\t\n\t// Check drive configuration\n(* ################################################################################ *)\t\t\n\t110:\n\t\tFOR i := 1 TO iMAX_AXES_NUMBER DO\n\t\t\t// Reset Error structure\n\t\t\trefastAxesConfigError[i].bWrongSercosAddress\t\t\t:= FALSE;\t\n\t\t\trefastAxesConfigError[i].bWrongFirmware \t\t\t\t:= FALSE;\n\t\t\trefastAxesConfigError[i].bWrongFunctionalPackages \t\t:= FALSE;\n\t\t\trefastAxesConfigError[i].bWrongDoubleAxisConfiguration := FALSE;\n\t\t\trefastAxesConfigError[i].bWrongSafetyType\t\t\t\t:= FALSE;\n\t\t\trefastAxesConfigError[i].bDriveFoundAndNotConfigured \t:= FALSE;\n\t\t\trefastAxesConfigError[i].bDriveConfiguredAndNotFound \t:= FALSE;\n\t\t\n\t\t\t// Check if found axis = configured axis\n\t\t\tIF  refastAxesActConfig[i].bRealAxis \n\t\t\t\tAND refastAxesActConfig[i].bAvailable \n\t\t\t\tAND refastAxesCmdConfig[i].bActive THEN\n\t\t\t\tIF refastAxesActConfig[i].bRealAxis = refastAxesCmdConfig[i].bRealAxis THEN\n\t\t\t\t\t// Sercos Address\n\t\t\t\t\tIF NOT (refastAxesActConfig[i].iSercosAddress = refastAxesCmdConfig[i].iSercosAddress) THEN\n\t\t\t\t\t\trefastAxesConfigError[i].bWrongSercosAddress := TRUE;\n\t\t\t\t\tEND_IF\n\t\t\t\t\t// Firmware\n\t\t\t\t\tIF NOT (LEFT(refastAxesActConfig[i].sFirmware,6) = refastAxesCmdConfig[i].sFirmware) THEN\n\t\t\t\t\t\trefastAxesConfigError[i].bWrongFirmware := TRUE;\t\n\t\t\t\t\tEND_IF  \t\n\t\t\t\t\t// Functional Packages\t\n\t\t\t\t\tIF NOT (refastAxesActConfig[i].stFunctionalPackages.bMA = refastAxesCmdConfig[i].stFunctionalPackages.bMA) \n\t\t\t\t\t\tOR NOT (refastAxesActConfig[i].stFunctionalPackages.bML = refastAxesCmdConfig[i].stFunctionalPackages.bML)\n\t\t\t\t\t\tOR NOT (refastAxesActConfig[i].stFunctionalPackages.bMSP = refastAxesCmdConfig[i].stFunctionalPackages.bMSP)\n\t\t\t\t\t\tOR NOT (refastAxesActConfig[i].stFunctionalPackages.bSNC = refastAxesCmdConfig[i].stFunctionalPackages.bSNC)\n\t\t\t\t\t\tOR NOT (refastAxesActConfig[i].stFunctionalPackages.bSRV = refastAxesCmdConfig[i].stFunctionalPackages.bSRV)\n\t\t\t\t\t\tOR NOT (refastAxesActConfig[i].stFunctionalPackages.bTF = refastAxesCmdConfig[i].stFunctionalPackages.bTF) \n\t\t\t\t\t\tOR NOT (refastAxesActConfig[i].stFunctionalPackages.bCL = refastAxesCmdConfig[i].stFunctionalPackages.bCL)\n\t\t\t\t\t\tTHEN\n\t\t\t\t\t\t\trefastAxesConfigError[i].bWrongFunctionalPackages := TRUE;\t\n\t\t\t\t\tEND_IF\n\t\t\t\t\t// SafetyType\n\t\t\t\t\tIF NOT (refastAxesActConfig[i].sSafetyType = refastAxesCmdConfig[i].sSafetyType) THEN\n\t\t\t\t\t\trefastAxesConfigError[i].bWrongSafetyType := TRUE;\t\n\t\t\t\t\tEND_IF  \t\n\t\t\t\t\t// Double Axis Configuration\n\t\t\t\t\tIF NOT (refastAxesActConfig[i].stDoubleAxis.bIsDoubleAxis = refastAxesCmdConfig[i].stDoubleAxis.bIsDoubleAxis)\n\t\t\t\t\tOR (\n\t\t\t\t\t( NOT (refastAxesActConfig[i].stDoubleAxis.iLeftAxisAddress = refastAxesCmdConfig[i].stDoubleAxis.iLeftAxisAddress)\n\t\t\t\t\tOR  NOT (refastAxesActConfig[i].stDoubleAxis.iRightAxisAddress = refastAxesCmdConfig[i].stDoubleAxis.iRightAxisAddress)\t\n\t\t\t\t\t) AND refastAxesActConfig[i].stDoubleAxis.bIsDoubleAxis AND refastAxesCmdConfig[i].stDoubleAxis.bIsDoubleAxis \t\t\t\t\t\n\t\t\t\t\t\t) THEN\n\t\t\t\t\t\trefastAxesConfigError[i].bWrongDoubleAxisConfiguration := TRUE;\t\t\t\n\t\t\t\t\tEND_IF\n\t\t\t\tEND_IF\n\t\t\t// Found but not configured\t\n\t\t\tELSIF refastAxesActConfig[i].bRealAxis \n\t\t\t\tAND refastAxesActConfig[i].bAvailable \n\t\t\t\tAND NOT refastAxesCmdConfig[i].bActive THEN\n\t\t\t\trefastAxesConfigError[i].bDriveFoundAndNotConfigured := TRUE;\n\t\t\t// configured but not found\n\t\t\tELSIF refastAxesCmdConfig[i].bRealAxis\n\t\t\t\tAND NOT refastAxesActConfig[i].bAvailable\n\t\t\t\tAND refastAxesCmdConfig[i].bActive \n\t\t\t\tTHEN\n\t\t\t\trefastAxesConfigError[i].bDriveConfiguredAndNotFound := TRUE;\n\t\t\tEND_IF\n\t\t\t\n\t\t\tIF refastAxesConfigError[i].bWrongSercosAddress\t\n\t\t\t\tOR refastAxesConfigError[i].bWrongFirmware \n\t\t\t\tOR refastAxesConfigError[i].bWrongSafetyType \n\t\t\t\tOR refastAxesConfigError[i].bWrongFunctionalPackages \n\t\t\t\tOR refastAxesConfigError[i].bWrongDoubleAxisConfiguration\n\t\t\t\tOR refastAxesConfigError[i].bDriveFoundAndNotConfigured \n\t\t\t\tOR refastAxesConfigError[i].bDriveConfiguredAndNotFound THEN\n\t\t\t\trefastAxesConfigError[i].bError := TRUE;\n\t\t\t\tbErrorTemp := TRUE;\n\t\t\t\t\n\t\t\t\t// Create Error Message\n\t\t\t\trefastAxesConfigError[i].sErrorMessage := 'Axis ';\n\t\t\t\tsTemp2 := refastAxesActConfig[i].sName;\n\t\t\t\t//strConcat(ADR\t(AxesConfigError[i].ErrorMessage), SIZEOF(AxesConfigError[i].ErrorMessage) ,\tADR(strTemp));\n\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\tsTemp2 := ' with sercos address ';\n\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\tsTemp2 := INT_TO_STRING(refastAxesActConfig[i].iSercosAddress);\n\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\tsTemp2 := ' shows following error(s): ';\n\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\tsTemp2 :='';\n\t\t\t\t\n\t\t\t\tIF refastAxesConfigError[i].bWrongSercosAddress\tTHEN\n\t\t\t\t\tsTemp2 :='wrong sercos address';\n\t\t\t\t\t//strConcat(ADR\t(AxesConfigError[i].ErrorMessage), SIZEOF(AxesConfigError[i].ErrorMessage) ,\tADR(strTemp));\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\t\tsTemp2 :=', ';\n\t\t\t\tEND_IF\n\t\t\t\t\t\n\t\t\t\tIF refastAxesConfigError[i].bWrongFirmware\tTHEN\n\t\t\t\t\t//strConcat(ADR\t(AxesConfigError[i].ErrorMessage), SIZEOF(AxesConfigError[i].ErrorMessage) ,\tADR(strTemp));\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\t\tsTemp2 :='wrong firmware';\n\t\t\t\t\t//strConcat(ADR\t(AxesConfigError[i].ErrorMessage), SIZEOF(AxesConfigError[i].ErrorMessage) ,\tADR(strTemp));\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\t\tsTemp2 :=', ';\n\t\t\t\tEND_IF\n\t\t\t\t\n\t\t\t\tIF refastAxesConfigError[i].bWrongSafetyType\tTHEN\n\t\t\t\t\t//strConcat(ADR\t(AxesConfigError[i].ErrorMessage), SIZEOF(AxesConfigError[i].ErrorMessage) ,\tADR(strTemp));\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\t\tsTemp2 :='wrong SafetyType';\n\t\t\t\t\t//strConcat(ADR\t(AxesConfigError[i].ErrorMessage), SIZEOF(AxesConfigError[i].ErrorMessage) ,\tADR(strTemp));\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\t\tsTemp2 :=', ';\n\t\t\t\tEND_IF\n\t\t\t\t\n\t\t\t\tIF refastAxesConfigError[i].bWrongFunctionalPackages\tTHEN\n\t\t\t\t\t//strConcat(ADR\t(AxesConfigError[i].ErrorMessage), SIZEOF(AxesConfigError[i].ErrorMessage) ,\tADR(strTemp));\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\t\tsTemp2 :='wrong functional package';\n\t\t\t\t\t//strConcat(ADR\t(AxesConfigError[i].ErrorMessage), SIZEOF(AxesConfigError[i].ErrorMessage) ,\tADR(strTemp));\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\t\tsTemp2 :=', ';\n\t\t\t\tEND_IF\n\t\t\t\t\n\t\t\t\tIF refastAxesConfigError[i].bWrongDoubleAxisConfiguration\tTHEN\n\t\t\t\t\t//strConcat(ADR\t(AxesConfigError[i].ErrorMessage), SIZEOF(AxesConfigError[i].ErrorMessage) ,\tADR(strTemp));\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\t\tsTemp2 :='wrong double axis config';\n\t\t\t\t\t//strConcat(ADR\t(AxesConfigError[i].ErrorMessage), SIZEOF(AxesConfigError[i].ErrorMessage) ,\tADR(strTemp));\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\t\tsTemp2 :=', ';\n\t\t\t\tEND_IF\n\t\t\t\t\n\t\t\t\tIF refastAxesConfigError[i].bDriveConfiguredAndNotFound\tTHEN\n\t\t\t\t\t//strConcat(ADR\t(AxesConfigError[i].ErrorMessage), SIZEOF(AxesConfigError[i].ErrorMessage) ,\tADR(strTemp));\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\t\tsTemp2 :='configured but not found';\n\t\t\t\t\t//strConcat(ADR\t(AxesConfigError[i].ErrorMessage), SIZEOF(AxesConfigError[i].ErrorMessage) ,\tADR(strTemp));\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\t\tsTemp2 :=', ';\n\t\t\t\tEND_IF\n\t\t\t\t\n\t\t\t\tIF refastAxesConfigError[i].bDriveFoundAndNotConfigured\tTHEN\n\t\t\t\t\t//strConcat(ADR\t(AxesConfigError[i].ErrorMessage), SIZEOF(AxesConfigError[i].ErrorMessage) ,\tADR(strTemp));\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\t\tsTemp2 :='found but not configured in DeviceCmdConfig';\n\t\t\t\t\t//strConcat(ADR\t(AxesConfigError[i].ErrorMessage), SIZEOF(AxesConfigError[i].ErrorMessage) ,\tADR(strTemp));\n\t\t\t\t\tIL_CONCAT(ADR(refastAxesConfigError[i].sErrorMessage), ADR(sTemp2), ADR(refastAxesConfigError[i].sErrorMessage), SIZEOF(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\t\tsTemp2 :=', ';\n\t\t\t\tEND_IF\n\t\t\t\t\t\n\t\t\t\tML_SetDiagEntry(\n\t\t\t\t\t\tSeverity:= enSeverity, \n\t\t\t\t\t\tClass:= enClass, \n\t\t\t\t\t\tFacility:= E_LOG_FACILITY.USER, \n\t\t\t\t\t\tCode:= wDIAG_CODE, \n\t\t\t\t\t\tText:= ADR(refastAxesConfigError[i].sErrorMessage));\n\t\t\t\t\t\t\n\t\t\t\tIF sDiagMessageInt = '' THEN\n\t\t\t\t\tsDiagMessageInt := refastAxesConfigError[i].sErrorMessage;\n\t\t\t\tEND_IF\t\t\n\t\t\t\n\t\t\tEND_IF\n\t\tEND_FOR\n\t\t\n\t\tIF bErrorTemp THEN\n\t\t// If error stop FB\n\t\t\tOUT_ErrorID := \tRESOURCE_ERROR;\n\t\t\tOUT_ErrorIdent.Table :=\tUSER1_TABLE;       \n\t\t\tOUT_ErrorIdent.Additional1 := 16#F0001;\n\t\t\tOUT_ErrorIdent.Additional2 := 16#F0000;\n\t\t\t\n\t\t\tiState := 998;\n\t\tELSE\n\t\t// If no error activate all found drives\n\t\t\tiState := 120;\t\n\t\t\ti := 1;\n\t\tEND_IF\n\t\t\n(* ################################################################################ *)\t\n\t// Activate all found axes\n(* ################################################################################ *)\t\n\t120: \n\t\tREPEAT \t\t// only new cycle if A24 need to be written\n\t\t\t// activate drive if found on ring\n\t\t\tIF refastAxesActConfig[i].bAvailable THEN \n\t\t\t\tstDummyAxis.AxisNo := i;\n\t\t\t\tCASE refastAxesCmdConfig[i].iStatus OF  \t\t\t\n\t\t\t\t\t0: iA24 := 0;\n\t\t\t\t\t1: iA24 := 1;\n\t\t\t\t\t2: iA24 := 1;\n\t\t\t\t\t\n\t\t\t\t\t4: iA24 := 4;\n\t\t\t\t\t5: iA24 := 5;\n\t\t\t\t\t6: iA24 := 5; \n\t\t\t\t\t\n\t\t\t\t\t8: iA24 := 8;\n\t\t\t\t\t9: iA24 := 9;\n\t\t\t\t\t10: iA24 := 9;\n\t\t\t\t\n\t\t\t\t\t12: iA24 := 12; \n\t\t\t\t\t13: iA24 := 13;\n\t\t\t\t\t14: iA24 := 13;\n\t\t\t\t\tELSE\n\t\t\t\t\t\tiA24 := 0;\n\t\t\t\tEND_CASE\n\t\t\t\t\n\t\t\t\tIF NOT (iA24 = DWORD_TO_DINT(AxisData[stDummyAxis.AxisNo].dwAxisCondition_i)) THEN\t\t// write A24 only if necessary)\n\t\t\t\t\tbExecuteWriteA24 := TRUE;\n\t\t\t\tEND_IF\t\n\t\t\tELSIF aiC484[(2*i)-1] = 8 THEN\n\t\t\t\tstDummyAxis.AxisNo := i;\n\t\t\t\t// If drive was not on ring\n\t\t\t\tIF ((refastAxesCmdConfig[i].iStatus > 3) \n\t\t\t\t\t\tAND (refastAxesCmdConfig[i].iStatus < 7)) THEN\n\t\t\t\t\t\t//Write A24 if command value decoupling is configured\n\t\t\t\t\t\tiA24 := 6;\n\t\t\t\tELSIF ((refastAxesCmdConfig[i].iStatus > 11) \n\t\t\t\t\t\tAND (refastAxesCmdConfig[i].iStatus < 15)) THEN \n\t\t\t\t\t//Write A24 if command value decoupling is configured in PM\n\t\t\t\t\tiA24 := 14;\n\t\t\t\tELSIF ((refastAxesCmdConfig[i].iStatus > 7) \n\t\t\t\t\t\tAND (refastAxesCmdConfig[i].iStatus < 11)) THEN \n\t\t\t\t\t//Deactivate Drive in PM\n\t\t\t\t\tiA24 := 10 ;\n\t\t\t\tELSIF ((refastAxesCmdConfig[i].iStatus > 0) \n\t\t\t\t\t\tAND (refastAxesCmdConfig[i].iStatus < 3)) THEN \n\t\t\t\t\t//Deactivate Drive\n\t\t\t\t\tiA24 := 2 ;\n\t\t\t\tELSE\t\n\t\t\t\t\t//Deactivate Drive\n\t\t\t\t\tiA24 := 2 ;\n\t\t\t\tEND_IF\n\t\t\t\t\n\t\t\t\tIF NOT (iA24 = DWORD_TO_DINT(AxisData[stDummyAxis.AxisNo].dwAxisCondition_i)) THEN\t\t// write A24 only if necessary)\n\t\t\t\t\tbExecuteWriteA24 := TRUE;\n\t\t\t\tEND_IF\t\n\t\t\tEND_IF\n\t\t\t\n\t\t\tfbWriteA24(\n\t\t\t\tExecute:= bExecuteWriteA24, \n\t\t\t\tParameterNumber:= FP_A_0_0024, \n\t\t\t\tValue:= iA24, \n\t\t\t\tAxis:= stDummyAxis);\t\n\t\t\t\t\t\t\n\t\t\t// NEXT Step\n\t\t\tIF fbWriteA24.Done OR NOT bExecuteWriteA24 THEN\t\n\t\t\t\tbExecuteWriteA24 := FALSE;\n\t\t\t\tfbWriteA24(\n\t\t\t\t\tExecute:= FALSE, \n\t\t\t\t\tAxis:= stDummyAxis );\t\n\t\t\t\ti := i + 1;\n\t\t\t\n\t\t\t// Error\t\n\t\t\tELSIF fbWriteA24.Error THEN\n\t\t\t\tOUT_ErrorID \t:= fbWriteA24.ErrorID;\n\t\t\t\tOUT_ErrorIdent \t:= fbWriteA24.ErrorIdent;\n\t\t\t\tfbWriteA24(Execute\t:= FALSE,\n\t\t\t\t\t\t\tAxis\t:= stDummyAxis);\n\t\t\t\t\n\t\t\t\tiState \t\t:= 998;\n\t\t\tEND_IF\t\n\t\t\n\t\t\tIF i > iMAX_AXES_NUMBER THEN \n\t\t\t\tiState := 130;\n\t\t\tEND_IF\n\t\t\t\n\t\tUNTIL bExecuteWriteA24 OR (iState = 130) OR (iState = 998)\n\t\tEND_REPEAT\t\t\n130:\n(* ################################################################################ *)\t\n// create String for UserDefs.cfg\n(* ################################################################################ *)\t\t\t\t\n\tiLineCfg := 1;\n\t//\tHeader\n\tasStringCmdCfg[iLineCfg] := ';--------------- Sercos IO --------------- ';\n\tiLineCfg := iLineCfg + 1;\t \t// next line\n\tasStringCmdCfg[iLineCfg] := '[SercosIO.Master.0]';\t\n\tiLineCfg := iLineCfg +1;\t \t// next line\t\n\tFOR i := 1 TO iMAX_AXES_NUMBER DO\n\t\tIF  refastAxesCmdConfig[i].iSercosAddress <> 0 \n\t\tAND (\t// Entry only with CSoS Safety Axes\n\t\t\t(refastAxesCmdConfig[i].sSafetyType = 'S0')\n\t\tOR \t(refastAxesCmdConfig[i].sSafetyType = 'S4')\n\t\tOR \t(refastAxesCmdConfig[i].sSafetyType = 'S5')\n\t\tOR \t(refastAxesCmdConfig[i].sSafetyType = 'S6')\n\t\tOR \t(refastAxesCmdConfig[i].sSafetyType = 'S3')\n\t\tOR \t(refastAxesCmdConfig[i].sSafetyType = 'SD')\n\t\t\t) THEN \n\t\t\tIF  refastAxesActConfig[i].bAvailable THEN\n\t\t\t\tasStringCmdCfg[iLineCfg] := '; ';\n\t\t\tELSE\t\t\t\n\t\t\t\tasStringCmdCfg[iLineCfg] := '';\n\t\t\tEND_IF\t\n\t\t\t\n\t\t\tsTemp2 := 'SlaveDeactAddr = ';\n\t\t\t//strConcat(ADR\t(arStringCmdCfg[iLineCfg]), SIZEOF(arStringCmdCfg[iLineCfg]) ,\tADR(strTemp));\n\t\t\tIL_CONCAT(ADR(asStringCmdCfg[iLineCfg]), ADR(sTemp2), ADR(asStringCmdCfg[iLineCfg]), SIZEOF(asStringCmdCfg[iLineCfg]));\n\t\t\tsTemp2 := INT_TO_STRING (refastAxesCmdConfig[i].iSercosAddress);\n\t\t\t//strConcat(ADR\t(arStringCmdCfg[iLineCfg]), SIZEOF(arStringCmdCfg[iLineCfg]) ,\tADR(strTemp));\n\t\t\tIL_CONCAT(ADR(asStringCmdCfg[iLineCfg]), ADR(sTemp2), ADR(asStringCmdCfg[iLineCfg]), SIZEOF(asStringCmdCfg[iLineCfg]));\n\n\t\t\tIF NOT (asStringCmdCfg[iLineCfg]= asStringActCfg[iLineCfg]) THEN\n\t\t\t\tOUT_bReboot := TRUE;\n\t\t\tEND_IF\n\t\t\n\t\t\tiLineCfg := iLineCfg +1; \t// next line\n\t\tEND_IF\t\n\tEND_FOR\n\t// finished\n\tiState := 199;\n\t\n(* ################################################################################ *)\t\n\t// End\n(* ################################################################################ *)\t\t\t\n199: \n\tiState := 200;\t\t\n\t\nEND_CASE\t","LineInfoPersistence":"(string)e22b231f-05eb-4869-9656-4d96da42634c_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)METHOD M_1ConfigAxes : BOOL\n","LineInfoPersistence":"(string)e22b231f-05eb-4869-9656-4d96da42634c_Decl_LineIds"}}}}}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","f8a58466":"{f8a58466-d7f6-439f-bbb8-d4600e41d099}","string":"System.String"}}},"FormatVersion":"1.0"}