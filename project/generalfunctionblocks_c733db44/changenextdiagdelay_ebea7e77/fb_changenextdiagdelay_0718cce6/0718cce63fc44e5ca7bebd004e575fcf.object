{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)0718cce6-3fc4-4e5c-a7be-bd004e575fcf","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)FB_ChangeNextDiagDelay","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)24568a24-c491-472c-a21f-ee5d33859fab","@Value":{"@Type":"24568a24","@Value":{"MemoryReserveForOnlineChange":"(int)0","ExcludeFromBuild":"(bool)False","External":"(bool)False","EnableSystemCall":"(bool)False","CompilerDefines":"(string)","LinkAlways":"(bool)False","Undefines":{"@Type":"[string]","@Value":[]}}}},{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)ebea7e77-f383-4eee-aa7d-765407e8ca3e"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"24568a24":"{24568a24-c491-472c-a21f-ee5d33859fab}","2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","bool":"System.Boolean","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","int":"System.Int32","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)\nIF IN_bExecute AND NOT bExecuteOld THEN\n\tbExecuteOld := TRUE;\n\tOUT_bActive := TRUE;\n\tOUT_bDone := FALSE;\n\tOUT_bError := FALSE;\n\tiState := 40;\nEND_IF\t\n\nIF NOT IN_bExecute AND bExecuteOld \n\tAND (OUT_bDone OR OUT_bError) THEN\n\tbExecuteOld := FALSE;\n\tOUT_bActive := FALSE;\n\tOUT_bDone := FALSE;\n\tOUT_bError := FALSE;\n\tiState := 0;\nEND_IF\t\n\n\nCASE istate OF\n\n40: // Größe ermitteln\n\tpsFileName^:= '/ata0a/ProjectData/PLC/DevicePLcAdd.cfg';\n\tOUT_iErrorState := iState;\n\tfb_ILFileGetSizeAsync(\n\t\tExecute:=TRUE , \n\t\tFileName:= psFileName,\t\t\t(* 2016-10 gt: IW13: '/ata0a/DevicePLcAdd.cfg' --> IW14: '/ata0a/ProjectData/PLC/DevicePLcAdd.cfg' *) (* 2017-01-26 gt: relevant für IW14 *)\n\t\tDone=> ,\t\t\n\t\tActive=> ,\n\t\tError=> ,\n \t\tErrorId=> ,\n\t\tErrorIdent=> , \n\t\tFileSize=> udiFileSize);\n\n\tIF fb_ILFileGetSizeAsync.Done THEN\n\t\tfb_ILFileGetSizeAsync(\n\t\t\tExecute:= FALSE);\n\t\tiState :=50;\n\tEND_IF\n\t// Error\t\n\tIF fb_ILFileGetSizeAsync.Error THEN\n\t\tfb_ILFileGetSizeAsync(\n\t\t\tExecute:= FALSE);\n\t\tiState :=999;\n\tEND_IF\n\t\t\t\n50:\t// DevicePlcAdd.cfg öffnen\n\tpsFileName^:= '/ata0a/ProjectData/PLC/DevicePLcAdd.cfg';\n\tOUT_iErrorState := iState;\t\t\n\tfb_ILFileOpenAsync(\n\t\tEnable:= TRUE, \n\t\tFileName:=psFileName,\t\t(* 2016-10 gt: IW13: '/ata0a/DevicePLcAdd.cfg' --> IW14: '/ata0a/ProjectData/PLC/DevicePLcAdd.cfg' *) (* 2017-01-26 gt: relevant für IW14 *)\n\t\tMode:=  AM_READ,\n\t\tInOperation=> , \n\t\tActive=> ,\n\t\tShutdown=> , \t\t \n\t\tError=> , \n\t\tErrorId=> ,\n\t\tErrorIdent=> , \n\t\tFileHandle=> hCfg);\n\n\tIF fb_ILFileOpenAsync.InOperation THEN\t\t\n\t\tsBuffer := '';\t\n\t\tiState :=60;\n\tEND_IF\n\n\t// Error\t\n\tIF fb_ILFileOpenAsync.Error THEN\n\t\tfb_ILFileOpenAsync(\n\t\t\tEnable:= FALSE);\n\t\tiState :=999;\n\tEND_IF\n\t\t\n60:\t// DevicePlcAdd.cfg lesen\n\tOUT_iErrorState := iState;\n\tfb_ILFileReadAsync(\n\t\tExecute:= TRUE,\n\t\tBufferAddr:= ADR(sBuffer),\n \t\tBufferSize:= udiFileSize, \n\t\tFileHandle:= hCfg,  \n\t\tDone=> , \n\t\tActive=> , \n\t\tError=> , \n\t\tErrorId=> ,\n\t\tErrorIdent=> , \n\t\tBytesRead=> udiReadBytes );\n\n\tIF fb_ILFileReadAsync.Done THEN\n\t\tfb_ILFileReadAsync(\n\t\t\tExecute:= FALSE);\n\t\tiState := 70;\n\tEND_IF\n\n\t// Error\t\n\tIF fb_ILFileReadAsync.Error THEN\n\t\tfb_ILFileReadAsync(\n\t\t\tExecute:= FALSE);\n\t\tiState :=999;\n\tEND_IF\n\t\n70: // Datei schließen\n\tOUT_iErrorState := iState;\n\tfb_ILFileOpenAsync(\n\t\tEnable:= FALSE); \n\n\tIF (fb_ILFileOpenAsync.InOperation = FALSE) THEN\n\t\tiState :=80;\n\tEND_IF\n\n\t// Error\t\n\tIF fb_ILFileOpenAsync.Error THEN\n\t\tiState :=999;\n\tEND_IF\n\t\n\t(* Auskommentiert, da strSplit strLen usw. noch fehlen\n80: // Datei in Array of String kopieren und Formatzeichen löschen\n\tOUT_iErrorState := iState;\n\tstrSplit(ADR(sBuffer),13 ,0,FALSE,ADR(astSplit));\n\tsLineFeed := CHR(10);\n\t\n\tFOR i := 1 TO iMaxDirEntry DO \n\t\tIF astSplit.arWords[i]^ = astSplit.arWords[iMaxDirEntry]^ THEN \n\t\t\tiEOF := i ;\t\t\n\t\t\ti := iMaxDirEntry;\n\t\tEND_IF\n\t\tasStringFile[i] := DEL_CHARS(astSplit.arWords[i]^, sLineFeed);\n\tEND_FOR\n\t\n\t// letzte Zeile löschen\n\tasStringFile[iEOF-1] := ''; \n\tiEOF\t:= iEOF-2;\n\t\n\tiState := 90;\t\n\n90:\t// Sektion im File suchen\n\tOUT_iErrorState := iState;\n\tsSearch := '[NetX_Device]';  \n\tiLength :=\tstrLen(ADR(sSearch));\n\tFOR i := 1 TO iEOF DO\n\t\tsTemp := '';\n\t\tIF strLen(ADR(asStringFile[i])) >= iLength THEN\t\t\t\t\t\t\t\t\t// Text länger als strSearch\n\t\t\t\n\t\t\tIF (asStringFile[i] = sSearch) THEN\t\t\t\t\t// Text enthält '[NetX_Device]'\n\t\t\t\tsSearch := 'NetxDiagDelayTime=';\n\t\t\t\tiLength :=\tstrLen(ADR(sSearch));\n\t\t\t\tstrNCopy(ADR(sTemp), (INT_TO_UINT(iLength)+2), ADR(asStringFile[i+1]), iLength);\t\t(* 2014-11-14 gt: INT_TO_UINT() hinzu, wegen Warnung *)\n\t\t\t\t\n\t\t\t\tIF NOT (sTemp = sSearch) THEN\t\t\t\t\t// Text enthält noch nicht 'NetxDiagDelayTime='\n\t\t\t\t\tFOR j:= iEOF TO i+1 BY -1 DO\t\t\t\t\t// dann alle Zeilen um eins nach unten verschieben\n\t\t\t\t\t\tasStringFile[j+1] := asStringFile[j];\t\n\t\t\t\t\tEND_FOR\n\t\t\t\n\t\t\t\t\tasStringFile[i+1] := 'NetxDiagDelayTime=';\t\t// Zeile inzufügen.\n\t\t\t\t\tsTemp := DINT_TO_STRING(IN_diDiagDelayTime);\n\t\t\t\t\tstrConcat(ADR(asStringFile[i+1]), SIZEOF(asStringFile[i+1]), ADR(sTemp));\n\t\t\t\tELSE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Text enthält 'NetxDiagDelayTime='\n\t\t\t\t\tsTemp := 'NetxDiagDelayTime=';\t\t\n\t\t\t\t\tsTemp2 := DINT_TO_STRING(IN_diDiagDelayTime);\n\t\t\t\t\tstrConcat(ADR(sTemp), SIZEOF(sTemp), ADR(sTemp2));\n\t\t\t\t\tIF sTemp = asStringFile[i+1] THEN  // Vergleichen, ob Wert stimmt \n\t\t\t\t\t\ti := iEOF+1;\n\t\t\t\t\t\tiState := 250;  \t\t\t\t\t\t\t\t\t// --> Done\n\t\t\t\t\t\tRETURN;\n\t\t\t\t\tELSE\n\t\t\t\t\t\tasStringFile[i+1] := sTemp; \t\t// Zeile neu schreiben\n\t\t\t\t\tEND_IF\t\t\n\t\t\t\tEND_IF\n\t\t\t\ti := iEOF+1; // End FOR Loop\n\t\t\tEND_IF\n\t\tEND_IF\t\n\tEND_FOR\t\n\t\n\tiState := 110;\n\t*)\n110: // DevicePlcAdd.new neu anlegen und zum schreiben öffnen\n\tpsFileName^:= '/ata0a/ProjectData/PLC/DevicePLcAdd.new';\n\tOUT_iErrorState := iState;\n\t// hCfg := SysFileStreamFOpenV3('/ata0a/ProjectData/PLC/DevicePLcAdd.new', 'w');\t\t(* 2016-10 gt: IW13: ('/ata0a/DevicePLcAdd.new', 'w') --> IW14: ('/ata0a/ProjectData/PLC/DevicePLcAdd.new', 'w') *)\t(* 2017-01-26 gt: relevant für IW14 *)\n\tfb_ILFileOpenAsync(\n\t\tEnable:= TRUE, \n\t\tFileName:=psFileName,\t\t(* 2016-10 gt: IW13: '/ata0a/DevicePLcAdd.cfg' --> IW14: '/ata0a/ProjectData/PLC/DevicePLcAdd.cfg' *) (* 2017-01-26 gt: relevant für IW14 *)\n\t\tMode:=  AM_WRITE,\n\t\tInOperation=> , \n\t\tActive=> ,\n\t\tShutdown=> , \t\t \n\t\tError=> , \n\t\tErrorId=> ,\n\t\tErrorIdent=> , \n\t\tFileHandle=> hCfg);\n\n\tIF fb_ILFileOpenAsync.InOperation THEN\t\t\t\t\t\n\t\tiState :=120;\n\t\tj := 0;\n\tEND_IF\n\n\t// Error\t\n\tIF fb_ILFileOpenAsync.Error THEN\n\t\tfb_ILFileOpenAsync(\n\t\t\tEnable:= FALSE);\n\t\tiState :=999;\n\tEND_IF\n\t\t\n\t\n120:\n\tOUT_iErrorState := iState;\n\tFOR i := j+1 TO iEOF DO\n\t\tdiResult := FUN_WriteLnString(hCfg, asStringFile[i]);\n(*\t\tIF i >= j+10 THEN\n\t\t\tj := i;\n\t\t\tRETURN;\n\t\tEND_IF  \t*)\n\tEND_FOR\n\tiState :=130;\n\n130:\n\tOUT_iErrorState := iState;\n\t\n\tfb_ILFileOpenAsync(\n\t\tEnable:= FALSE);\n\tiState :=140;\n\n140: // alte Datei umbenennen\n\tpsFileName^ := '/ata0a/ProjectData/PLC/DevicePLcAdd.cfg';\n\tpsNewFileName^ := '/ata0a/ProjectData/PLC/DevicePLcAdd.old'; \n\tOUT_iErrorState := iState;\n\tfb_ILFileRenameAsync(\n\t\tExecute:= TRUE, \n\t\tOldName:= psFileName, \t\t(* 2016-10 gt: IW13: '/ata0a/DevicePLcAdd.cfg' --> IW14: '/ata0a/ProjectData/PLC/DevicePLcAdd.cfg' *)\t(* 2017-01-26 gt: relevant für IW14 *)\n\t\tNewName:= psNewFileName, \t\t(* 2016-10 gt: IW13: '/ata0a/DevicePLcAdd.old' --> IW14: '/ata0a/ProjectData/PLC/DevicePLcAdd.old' *)\t(* 2017-01-26 gt: relevant für IW14 *)\n\t\tDone=> , \n\t\tActive=> , \n\t\tError=> , \n\t\tErrorId=> ,\n\t\tErrorIdent=>);\n\t\n\tIF fb_ILFileRenameAsync.Done THEN\n\t\tfb_ILFileRenameAsync(\n\t\t\tExecute:= FALSE);\n\t\tiState :=150;\n\tEND_IF\n\n\t\t// Error\t\n\tIF fb_ILFileRenameAsync.Error THEN\n\t\tfb_ILFileRenameAsync(\n\t\t\tExecute:= FALSE);\n\t\tiState :=999;\n\tEND_IF\n\n150: // neue Datei umbenennen\n\tpsFileName^ := '/ata0a/ProjectData/PLC/DevicePLcAdd.new';\n\tpsNewFileName^ := '/ata0a/ProjectData/PLC/DevicePLcAdd.cfg';\n\tOUT_iErrorState := iState;\t\n\tfb_ILFileRenameAsync(\n\t\tExecute:= TRUE, \n\t\tOldName:= psFileName, \t\t(* 2016-10 gt: IW13: '/ata0a/DevicePLcAdd.new' --> IW14: '/ata0a/ProjectData/PLC/DevicePLcAdd.new' *)\t(* 2017-01-26 gt: relevant für IW14 *)\n\t\tNewName:= psNewFileName,\t\t(* 2016-10 gt: IW13: '/ata0a/DevicePLcAdd.cfg' --> IW14: '/ata0a/ProjectData/PLC/DevicePLcAdd.cfg' *) (* 2017-01-26 gt: relevant für IW14 *)\n\t\tDone=> , \n\t\tActive=> , \n\t\tError=> , \n\t\tErrorId=> ,\n\t\tErrorIdent=> );\n\t\n\tIF fb_ILFileRenameAsync.Done THEN\n\t\tfb_ILFileRenameAsync(\n\t\t\tExecute:= FALSE);\n\t\tiState :=160;\n\tEND_IF\n\n\t// Error\t\n\tIF fb_ILFileRenameAsync.Error THEN\n\t\tfb_ILFileRenameAsync(\n\t\t\tExecute:= FALSE);\n\t\tiState :=999;\n\tEND_IF\n\t\n160: // alte Datei löschen\n\tpsFileName^ := '/ata0a/ProjectData/PLC/DevicePLcAdd.old';\n\tOUT_iErrorState := iState;\n\tfb_ILFileDeleteAsync(\n\t\tExecute:= TRUE, \n\t\tFileName:= psFileName, \t\t(* 2016-10 gt: IW13: '/ata0a/DevicePLcAdd.old' --> IW14: '/ata0a/ProjectData/PLC/DevicePLcAdd.old' *)\t(* 2017-01-26 gt: relevant für IW14 *)\n\t\tDone=> , \n\t\tActive=> , \n\t\tError=> , \n\t\tErrorId=> ,\n\t\tErrorIdent=> );\n\t\n\tIF fb_ILFileDeleteAsync.Done THEN\n\t\tfb_ILFileDeleteAsync(\n\t\t\tExecute:= FALSE);\n\t\ti := 0;\n\t\tiState :=250;\n\tEND_IF\n\n\t// Error\t\n\tIF fb_ILFileDeleteAsync.Error THEN\n\t\tfb_ILFileDeleteAsync(\n\t\t\tExecute:= FALSE);\n\t\tiState :=999;\n\tEND_IF\n\n250:  // Done\n\tOUT_iErrorState := 0;\n\tOUT_bDone := TRUE;\n\tOUT_bActive := FALSE;\t\n\tOUT_bError := FALSE;\n\n999: // ERROR \n\tOUT_bDone := FALSE;\n\tOUT_bActive := FALSE;\t\n\tOUT_bError := TRUE;\n\t\nEND_CASE\t\n\n","LineInfoPersistence":"(string)0718cce6-3fc4-4e5c-a7be-bd004e575fcf_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string){attribute 'qualified_only' := ''}\n{attribute 'namespace' := 'ILGStdLib.FunctionBlocks'}\nFUNCTION_BLOCK FB_ChangeNextDiagDelay\nVAR_INPUT\n\t/// start procedure\n\tIN_bExecute: BOOL;\n\t/// Delay Time in ms\n\tIN_diDiagDelayTime: DINT;\nEND_VAR\nVAR_OUTPUT\n\t/// Done\n\tOUT_bDone: BOOL;\n\t/// Active\n\tOUT_bActive: BOOL;\n\t/// error\t\n\tOUT_bError: BOOL;\n\t/// internat state when error occured\n\tOUT_iErrorState: INT;\nEND_VAR\nVAR CONSTANT\n\t/// max no of directory entries\n\tiMaxDirEntry: INT := 400;\nEND_VAR\nVAR\n\tbExecuteOld: BOOL;\n\tistate: INT;\n\tiLength: INT;\n\ti: INT;\n\tj: INT;\n\tiEOF: INT;\n\thCfg: ITF_FILEASYNC;\n\tsBuffer: STRING(7000);\n\tudiReadBytes: UDINT;\n\tudiFileSize: UDINT;\n\tsLineFeed: STRING(1);\n\tsTemp: STRING;\n\tsTemp2: STRING;\n\tsSearch: STRING;\n\tdiResult: DINT;\n\tastSplit: ST_Split;\n\tasStringFile: ARRAY[1..iMaxDirEntry] OF STRING;\n\tpsFileName : POINTER TO STRING;\n\tpsNewFileName : POINTER TO STRING;\n\tfb_ILFileDeleteAsync: IL_FileDeleteAsync;\n\tfb_ILFileOpenAsync: IL_FileAsync;\n\tfb_ILFileReadAsync: IL_FileReadAsync;\t\n\tfb_ILFileGetSizeAsync: IL_FileGetSizeAsync;\n\tfb_ILFileRenameAsync: IL_FileRenameAsync;\n\tfb_ILFileWriteAsync: IL_FileWriteAsync;\nEND_VAR\n","LineInfoPersistence":"(string)0718cce6-3fc4-4e5c-a7be-bd004e575fcf_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)398","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}